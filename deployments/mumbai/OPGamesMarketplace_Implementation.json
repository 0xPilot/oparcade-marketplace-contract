{
  "address": "0x73Ed941Dca85Fa460bE5B9Cfff5Ac29f5b166662",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "nft",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ItemCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "nft",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "quantity",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "payToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "pricePerItem",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startingTime",
          "type": "uint256"
        }
      ],
      "name": "ItemListed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "buyer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "nft",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "quantity",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "payToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "pricePerItem",
          "type": "uint256"
        }
      ],
      "name": "ItemSold",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "nft",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "payToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newPrice",
          "type": "uint256"
        }
      ],
      "name": "ItemUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "nft",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "OfferCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "nft",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "quantity",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "payToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "pricePerItem",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "OfferCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "by",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldFeeRecipient",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newFeeRecipient",
          "type": "address"
        }
      ],
      "name": "PlatformFeeRecipientUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "by",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldPlatformFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newPlatformFee",
          "type": "uint256"
        }
      ],
      "name": "PlatformFeeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_creator",
          "type": "address"
        }
      ],
      "name": "acceptOffer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "addressRegistry",
      "outputs": [
        {
          "internalType": "contract IAddressRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_payToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "buyItem",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "cancelListing",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "cancelOffer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "contract IERC20Upgradeable",
          "name": "_payToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_pricePerItem",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_deadline",
          "type": "uint256"
        }
      ],
      "name": "createOffer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeRecipient",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addressRegistry",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "_feeRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_platformFee",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_quantity",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_payToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_pricePerItem",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_startAt",
          "type": "uint256"
        }
      ],
      "name": "listItem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "listings",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "quantity",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "payToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "pricePerItem",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startAt",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "offers",
      "outputs": [
        {
          "internalType": "contract IERC20Upgradeable",
          "name": "payToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "quantity",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "pricePerItem",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "platformFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_payToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_newPrice",
          "type": "uint256"
        }
      ],
      "name": "updateListing",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_platformFee",
          "type": "uint256"
        }
      ],
      "name": "updatePlatformFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_feeRecipient",
          "type": "address"
        }
      ],
      "name": "updatePlatformFeeRecipient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x200d8ecd026f01761166ec7f50c54d22f5a53ef9862c9159419d67cbfe20df12",
  "receipt": {
    "to": null,
    "from": "0x4039027048c08DCEdE2d912012308CE4F0F2bC68",
    "contractAddress": "0x73Ed941Dca85Fa460bE5B9Cfff5Ac29f5b166662",
    "transactionIndex": 0,
    "gasUsed": "3249703",
    "logsBloom": "0x
    "blockHash": "0x176ef9c8511dbc4d0a083824254bb084acd520a0edb808eb5a572e763373d632",
    "transactionHash": "0x200d8ecd026f01761166ec7f50c54d22f5a53ef9862c9159419d67cbfe20df12",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 27831050,
        "transactionHash": "0x200d8ecd026f01761166ec7f50c54d22f5a53ef9862c9159419d67cbfe20df12",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x0000000000000000000000004039027048c08dcede2d912012308ce4f0f2bc68",
          "0x000000000000000000000000be188d6641e8b680743a4815dfa0f6208038960f"
        ],
        "data": "0x00000000000000000000000000000000000000000000000001cdcf81a4123ec800000000000000000000000000000000000000000000000037fdc68ff95aa6f10000000000000000000000000000000000000000000024be1b5a03e12186e5d8000000000000000000000000000000000000000000000000362ff70e554868290000000000000000000000000000000000000000000024be1d27d362c59924a0",
        "logIndex": 0,
        "blockHash": "0x176ef9c8511dbc4d0a083824254bb084acd520a0edb808eb5a572e763373d632"
      }
    ],
    "blockNumber": 27831050,
    "cumulativeGasUsed": "3249703",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "15b3947fd486810d5b6775035b1b066d",
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ItemCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"payToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pricePerItem\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startingTime\",\"type\":\"uint256\"}],\"name\":\"ItemListed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"payToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pricePerItem\",\"type\":\"uint256\"}],\"name\":\"ItemSold\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"payToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"ItemUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"OfferCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"payToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pricePerItem\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"OfferCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"by\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldFeeRecipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newFeeRecipient\",\"type\":\"address\"}],\"name\":\"PlatformFeeRecipientUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"by\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldPlatformFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPlatformFee\",\"type\":\"uint256\"}],\"name\":\"PlatformFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_creator\",\"type\":\"address\"}],\"name\":\"acceptOffer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"addressRegistry\",\"outputs\":[{\"internalType\":\"contract IAddressRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_payToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"buyItem\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"cancelListing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"cancelOffer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"_payToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_pricePerItem\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_deadline\",\"type\":\"uint256\"}],\"name\":\"createOffer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeRecipient\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addressRegistry\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_feeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_platformFee\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_payToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_pricePerItem\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startAt\",\"type\":\"uint256\"}],\"name\":\"listItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"listings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"payToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pricePerItem\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startAt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"offers\",\"outputs\":[{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"payToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerItem\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"platformFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_payToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_newPrice\",\"type\":\"uint256\"}],\"name\":\"updateListing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_platformFee\",\"type\":\"uint256\"}],\"name\":\"updatePlatformFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_feeRecipient\",\"type\":\"address\"}],\"name\":\"updatePlatformFeeRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptOffer(address,uint256,address)\":{\"params\":{\"_creator\":\"Offer creator address\",\"_nftAddress\":\"Addres of NFT contract\",\"_tokenId\":\"Token ID of NFT\"}},\"buyItem(address,uint256,address,address)\":{\"params\":{\"_nftAddress\":\"Address of NFT contract\",\"_owner\":\"NFT owner address\",\"_payToken\":\"Payment token address\",\"_tokenId\":\"Token ID of NFT\"}},\"cancelListing(address,uint256)\":{\"params\":{\"_nftAddress\":\"Addres of NFT contract\",\"_tokenId\":\"Token ID of NFT\"}},\"cancelOffer(address,uint256)\":{\"params\":{\"_nftAddress\":\"Addres of NFT contract\",\"_tokenId\":\"Token ID of NFT\"}},\"createOffer(address,uint256,address,uint256,uint256,uint256)\":{\"params\":{\"_deadline\":\"Offer expiration\",\"_nftAddress\":\"Addres of NFT contract\",\"_payToken\":\"Payment tokne addres\",\"_pricePerItem\":\"Price per item\",\"_quantity\":\"Quantity of items\",\"_tokenId\":\"Token ID of NFT\"}},\"listItem(address,uint256,uint256,address,uint256,uint256)\":{\"params\":{\"_nftAddress\":\"Address of NFT contract\",\"_payToken\":\"Paying token\",\"_pricePerItem\":\"sale price for each iteam\",\"_quantity\":\"token amount to list (needed for ERC-1155 NFTs, set as 1 for ERC-721)\",\"_startAt\":\"scheduling for a future sale\",\"_tokenId\":\"Token ID of NFT\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause()\":{\"details\":\"Only owner\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause()\":{\"details\":\"Only owner\"},\"updateListing(address,uint256,address,uint256)\":{\"params\":{\"_newPrice\":\"New sale price for each item\",\"_nftAddress\":\"Address of NFT contract\",\"_payToken\":\"Payment token address\",\"_tokenId\":\"Token ID of NFT\"}},\"updatePlatformFee(uint256)\":{\"details\":\"Only owner\",\"params\":{\"_platformFee\":\"new platform fee\"}},\"updatePlatformFeeRecipient(address)\":{\"details\":\"Only owner\",\"params\":{\"_feeRecipient\":\"new platform fee recipient\"}}},\"version\":1},\"userdoc\":{\"events\":{\"ItemListed(address,address,uint256,uint256,address,uint256,uint256)\":{\"notice\":\"Events for the contract\"}},\"kind\":\"user\",\"methods\":{\"acceptOffer(address,uint256,address)\":{\"notice\":\"Method for accepting the offer\"},\"addressRegistry()\":{\"notice\":\"AddressRegistry\"},\"buyItem(address,uint256,address,address)\":{\"notice\":\"Method for buying listed NFT\"},\"cancelListing(address,uint256)\":{\"notice\":\"Method for canceling listed NFT\"},\"cancelOffer(address,uint256)\":{\"notice\":\"Method for canceling the offer\"},\"createOffer(address,uint256,address,uint256,uint256,uint256)\":{\"notice\":\"Method of offering item\"},\"feeRecipient()\":{\"notice\":\"Platform fee recipient\"},\"listItem(address,uint256,uint256,address,uint256,uint256)\":{\"notice\":\"Method for listing NFT\"},\"listings(address,uint256,address)\":{\"notice\":\"NFT Address -> Token ID -> Owner -> Listing\"},\"offers(address,uint256,address)\":{\"notice\":\"NFT Address -> Token ID -> Offerer -> Offer\"},\"pause()\":{\"notice\":\"Pause Marketplace\"},\"platformFee()\":{\"notice\":\"Platform fee\"},\"unpause()\":{\"notice\":\"Resume Marketplace\"},\"updateListing(address,uint256,address,uint256)\":{\"notice\":\"Method for updating listed NFT\"},\"updatePlatformFee(uint256)\":{\"notice\":\"Update platform fee\"},\"updatePlatformFeeRecipient(address)\":{\"notice\":\"Update platform fee address\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OPGamesMarketplace.sol\":\"OPGamesMarketplace\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal initializer {\\n        __Context_init_unchained();\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal initializer {\\n        _setOwner(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _setOwner(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x35b09b69aca3bc2633da8f47382a81ecf367efe57167a2114f60f9ec81988afa\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     */\\n    bool private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Modifier to protect an initializer function from being invoked twice.\\n     */\\n    modifier initializer() {\\n        require(_initializing || !_initialized, \\\"Initializable: contract is already initialized\\\");\\n\\n        bool isTopLevelCall = !_initializing;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n            _initialized = true;\\n        }\\n\\n        _;\\n\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x8b2abd85d0ece7e866e100e9d47ca9cbec93c87cf71a8d267b2b93eb81f7d5e9\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    function __Pausable_init() internal initializer {\\n        __Context_init_unchained();\\n        __Pausable_init_unchained();\\n    }\\n\\n    function __Pausable_init_unchained() internal initializer {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x742c0fbab73bf595ca40025f6e81cb48dbd5e133950717f7befd062a925c0148\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuardUpgradeable is Initializable {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    function __ReentrancyGuard_init() internal initializer {\\n        __ReentrancyGuard_init_unchained();\\n    }\\n\\n    function __ReentrancyGuard_init_unchained() internal initializer {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and make it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x89fa60d14355f7ae06af11e28fce2bb90c5c6186645d681a30e1b36234a4c210\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165Upgradeable.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155Upgradeable is IERC165Upgradeable {\\n    /**\\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\\n     */\\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\\n\\n    /**\\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\\n     * transfers.\\n     */\\n    event TransferBatch(\\n        address indexed operator,\\n        address indexed from,\\n        address indexed to,\\n        uint256[] ids,\\n        uint256[] values\\n    );\\n\\n    /**\\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\\n     * `approved`.\\n     */\\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\\n     *\\n     * If an {URI} event was emitted for `id`, the standard\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\\n     * returned by {IERC1155MetadataURI-uri}.\\n     */\\n    event URI(string value, uint256 indexed id);\\n\\n    /**\\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) external view returns (uint256);\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\\n        external\\n        view\\n        returns (uint256[] memory);\\n\\n    /**\\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `operator` cannot be the caller.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\\n     *\\n     * See {setApprovalForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] calldata ids,\\n        uint256[] calldata amounts,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x06971bd1720c85e4771b94c83eb1e058af6070f6f6306ebc874a11501b238b8a\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20Upgradeable {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xf449ca0a763d4b1b4462cf8706857074492f324020a2b9d099181b5383055ad3\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20Upgradeable.sol\\\";\\nimport \\\"../../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20Upgradeable {\\n    using AddressUpgradeable for address;\\n\\n    function safeTransfer(\\n        IERC20Upgradeable token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20Upgradeable token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20Upgradeable token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20Upgradeable token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20Upgradeable token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20Upgradeable token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc7d7fe7d5ed5068742927e37b400591153dbe8526cd942cfcf5dbb971ba5e8e2\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165Upgradeable.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721Upgradeable is IERC165Upgradeable {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0xfbb3ca7272af58dc245a20e91a1f68481ee04706fa3fe46d184000efc21f4bad\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) private pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x37c56d5e4a1c4c65ad0dcc6af28442c5d35c6ca07d9ad6e966e07dceb97e6c8d\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal initializer {\\n        __Context_init_unchained();\\n    }\\n\\n    function __Context_init_unchained() internal initializer {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x828a6fb02c79a63dc5867427f355c0a9c65b4359fecadae73883154da550f6f8\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165Upgradeable {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x1c4860acd323e34a67b3e97faab9aaa55fe8e92b1dcf08b5f47f3468d58ce75c\",\"license\":\"MIT\"},\"contracts/OPGamesMarketplace.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.11;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\\\";\\n\\nimport \\\"./interfaces/IOPGamesAuction.sol\\\";\\nimport \\\"./interfaces/IAddressRegistry.sol\\\";\\nimport \\\"./interfaces/ITokenRegistry.sol\\\";\\n\\ncontract OPGamesMarketplace is Initializable, OwnableUpgradeable, ReentrancyGuardUpgradeable, PausableUpgradeable {\\n  using SafeERC20Upgradeable for IERC20Upgradeable;\\n\\n  /// @notice Events for the contract\\n  event ItemListed(\\n    address indexed owner,\\n    address indexed nft,\\n    uint256 tokenId,\\n    uint256 quantity,\\n    address payToken,\\n    uint256 pricePerItem,\\n    uint256 startingTime\\n  );\\n  event ItemSold(\\n    address indexed seller,\\n    address indexed buyer,\\n    address indexed nft,\\n    uint256 tokenId,\\n    uint256 quantity,\\n    address payToken,\\n    uint256 pricePerItem\\n  );\\n  event ItemUpdated(address indexed owner, address indexed nft, uint256 tokenId, address payToken, uint256 newPrice);\\n  event ItemCanceled(address indexed owner, address indexed nft, uint256 tokenId);\\n  event OfferCreated(\\n    address indexed creator,\\n    address indexed nft,\\n    uint256 tokenId,\\n    uint256 quantity,\\n    address payToken,\\n    uint256 pricePerItem,\\n    uint256 deadline\\n  );\\n  event OfferCanceled(address indexed creator, address indexed nft, uint256 tokenId);\\n  event PlatformFeeUpdated(address indexed by, uint256 oldPlatformFee, uint256 newPlatformFee);\\n  event PlatformFeeRecipientUpdated(\\n    address indexed by,\\n    address indexed oldFeeRecipient,\\n    address indexed newFeeRecipient\\n  );\\n\\n  /// @notice Structure for listed items\\n  struct Listing {\\n    uint256 quantity;\\n    address payToken;\\n    uint256 pricePerItem;\\n    uint256 startAt;\\n  }\\n\\n  /// @notice Structure for offer\\n  struct Offer {\\n    IERC20Upgradeable payToken;\\n    uint256 quantity;\\n    uint256 pricePerItem;\\n    uint256 deadline;\\n  }\\n\\n  bytes4 private constant INTERFACE_ID_ERC721 = 0x80ac58cd;\\n  bytes4 private constant INTERFACE_ID_ERC1155 = 0xd9b67a26;\\n\\n  /// @notice NFT Address -> Token ID -> Owner -> Listing\\n  mapping(address => mapping(uint256 => mapping(address => Listing))) public listings;\\n\\n  /// @notice NFT Address -> Token ID -> Offerer -> Offer\\n  mapping(address => mapping(uint256 => mapping(address => Offer))) public offers;\\n\\n  /// @notice Platform fee recipient\\n  address payable public feeRecipient;\\n\\n  /// @notice Platform fee\\n  uint256 public platformFee;\\n\\n  /// @notice AddressRegistry\\n  IAddressRegistry public addressRegistry;\\n\\n  modifier isListed(\\n    address _nftAddress,\\n    uint256 _tokenId,\\n    address _owner\\n  ) {\\n    Listing memory listing = listings[_nftAddress][_tokenId][_owner];\\n    require(listing.quantity > 0, \\\"not listed item\\\");\\n    _;\\n  }\\n\\n  modifier notListed(\\n    address _nftAddress,\\n    uint256 _tokenId,\\n    address _owner\\n  ) {\\n    Listing memory listing = listings[_nftAddress][_tokenId][_owner];\\n    require(listing.quantity == 0, \\\"already listed\\\");\\n    _;\\n  }\\n\\n  modifier validListing(\\n    address _nftAddress,\\n    uint256 _tokenId,\\n    address _owner\\n  ) {\\n    Listing memory listedItem = listings[_nftAddress][_tokenId][_owner];\\n\\n    _validOwner(_nftAddress, _tokenId, _owner, listedItem.quantity);\\n\\n    require(_getNow() >= listedItem.startAt, \\\"item not buyable\\\");\\n    _;\\n  }\\n\\n  modifier offerExists(\\n    address _nftAddress,\\n    uint256 _tokenId,\\n    address _creator\\n  ) {\\n    Offer memory offer = offers[_nftAddress][_tokenId][_creator];\\n    require(offer.quantity > 0 && offer.deadline > _getNow(), \\\"offer not exists or expired\\\");\\n    _;\\n  }\\n\\n  modifier offerNotExists(\\n    address _nftAddress,\\n    uint256 _tokenId,\\n    address _creator\\n  ) {\\n    Offer memory offer = offers[_nftAddress][_tokenId][_creator];\\n    require(offer.quantity == 0 || offer.deadline <= _getNow(), \\\"offer already created\\\");\\n    _;\\n  }\\n\\n  receive() external payable {}\\n\\n  function initialize(\\n    address _addressRegistry,\\n    address payable _feeRecipient,\\n    uint256 _platformFee\\n  ) external initializer {\\n    __Ownable_init();\\n    __ReentrancyGuard_init();\\n    __Pausable_init();\\n\\n    require(_addressRegistry != address(0), \\\"unexpected address registry\\\");\\n    require(_feeRecipient != address(0), \\\"unexpected fee recipient\\\");\\n    require(_platformFee < 100_0, \\\"platform fee exceeded\\\");\\n\\n    addressRegistry = IAddressRegistry(_addressRegistry);\\n    feeRecipient = _feeRecipient;\\n    platformFee = _platformFee;\\n  }\\n\\n  /**\\n   * @notice Method for listing NFT\\n   * @param _nftAddress Address of NFT contract\\n   * @param _tokenId Token ID of NFT\\n   * @param _quantity token amount to list (needed for ERC-1155 NFTs, set as 1 for ERC-721)\\n   * @param _payToken Paying token\\n   * @param _pricePerItem sale price for each iteam\\n   * @param _startAt scheduling for a future sale\\n   */\\n  function listItem(\\n    address _nftAddress,\\n    uint256 _tokenId,\\n    uint256 _quantity,\\n    address _payToken,\\n    uint256 _pricePerItem,\\n    uint256 _startAt\\n  ) external notListed(_nftAddress, _tokenId, msg.sender) {\\n    if (IERC165Upgradeable(_nftAddress).supportsInterface(INTERFACE_ID_ERC721)) {\\n      IERC721Upgradeable nft = IERC721Upgradeable(_nftAddress);\\n      require(nft.ownerOf(_tokenId) == msg.sender, \\\"not owning item\\\");\\n      require(nft.isApprovedForAll(msg.sender, address(this)), \\\"item not approved\\\");\\n    } else if (IERC165Upgradeable(_nftAddress).supportsInterface(INTERFACE_ID_ERC1155)) {\\n      IERC1155Upgradeable nft = IERC1155Upgradeable(_nftAddress);\\n      require(nft.balanceOf(msg.sender, _tokenId) >= _quantity, \\\"must hold enough nfts\\\");\\n      require(nft.isApprovedForAll(msg.sender, address(this)), \\\"item not approved\\\");\\n    } else {\\n      revert(\\\"invalid nft address\\\");\\n    }\\n\\n    _validCollection(_nftAddress);\\n    _validPayToken(_payToken);\\n\\n    listings[_nftAddress][_tokenId][msg.sender] = Listing(_quantity, _payToken, _pricePerItem, _startAt);\\n\\n    emit ItemListed(msg.sender, _nftAddress, _tokenId, _quantity, _payToken, _pricePerItem, _startAt);\\n  }\\n\\n  /**\\n   * @notice Method for canceling listed NFT\\n   * @param _nftAddress Addres of NFT contract\\n   * @param _tokenId Token ID of NFT\\n   */\\n  function cancelListing(address _nftAddress, uint256 _tokenId)\\n    external\\n    nonReentrant\\n    isListed(_nftAddress, _tokenId, msg.sender)\\n  {\\n    _cancelListing(_nftAddress, _tokenId, msg.sender);\\n  }\\n\\n  /**\\n   * @notice Method for updating listed NFT\\n   * @param _nftAddress Address of NFT contract\\n   * @param _tokenId Token ID of NFT\\n   * @param _payToken Payment token address\\n   * @param _newPrice New sale price for each item\\n   */\\n  function updateListing(\\n    address _nftAddress,\\n    uint256 _tokenId,\\n    address _payToken,\\n    uint256 _newPrice\\n  ) external nonReentrant isListed(_nftAddress, _tokenId, msg.sender) {\\n    Listing storage listedItem = listings[_nftAddress][_tokenId][msg.sender];\\n\\n    _validOwner(_nftAddress, _tokenId, msg.sender, listedItem.quantity);\\n\\n    _validPayToken(_payToken);\\n\\n    listedItem.payToken = _payToken;\\n    listedItem.pricePerItem = _newPrice;\\n\\n    emit ItemUpdated(msg.sender, _nftAddress, _tokenId, _payToken, _newPrice);\\n  }\\n\\n  /**\\n   * @notice Method for buying listed NFT\\n   * @param _nftAddress Address of NFT contract\\n   * @param _tokenId Token ID of NFT\\n   * @param _payToken Payment token address\\n   * @param _owner NFT owner address\\n   */\\n  function buyItem(\\n    address _nftAddress,\\n    uint256 _tokenId,\\n    address _payToken,\\n    address _owner\\n  )\\n    external\\n    payable\\n    nonReentrant\\n    whenNotPaused\\n    isListed(_nftAddress, _tokenId, _owner)\\n    validListing(_nftAddress, _tokenId, _owner)\\n  {\\n    Listing memory listedItem = listings[_nftAddress][_tokenId][_owner];\\n    require(listedItem.payToken == _payToken, \\\"invalid pay token\\\");\\n\\n    _buyItem(_nftAddress, _tokenId, _payToken, _owner);\\n  }\\n\\n  function _buyItem(\\n    address _nftAddress,\\n    uint256 _tokenId,\\n    address _payToken,\\n    address _owner\\n  ) private {\\n    Listing memory listedItem = listings[_nftAddress][_tokenId][_owner];\\n\\n    uint256 price = listedItem.pricePerItem * listedItem.quantity;\\n    uint256 feeAmount = (price * platformFee) / 100_0;\\n\\n    // Transfer token to owner\\n    if (_payToken == address(0)) {\\n      require(msg.value == price, \\\"insufficient Ether to buy\\\");\\n    }\\n    _tokenTransferFrom(msg.sender, feeRecipient, _payToken, feeAmount);\\n    _tokenTransferFrom(msg.sender, _owner, _payToken, price - feeAmount);\\n\\n    // Transfer NFT to buyer\\n    if (IERC165Upgradeable(_nftAddress).supportsInterface(INTERFACE_ID_ERC721)) {\\n      IERC721Upgradeable(_nftAddress).safeTransferFrom(_owner, msg.sender, _tokenId);\\n    } else {\\n      IERC1155Upgradeable(_nftAddress).safeTransferFrom(_owner, msg.sender, _tokenId, listedItem.quantity, bytes(\\\"\\\"));\\n    }\\n\\n    delete (listings[_nftAddress][_tokenId][_owner]);\\n\\n    emit ItemSold(_owner, msg.sender, _nftAddress, _tokenId, listedItem.quantity, _payToken, listedItem.pricePerItem);\\n  }\\n\\n  /**\\n   * @notice Method of offering item\\n   * @param _nftAddress Addres of NFT contract\\n   * @param _tokenId Token ID of NFT\\n   * @param _payToken Payment tokne addres\\n   * @param _quantity Quantity of items\\n   * @param _pricePerItem Price per item\\n   * @param _deadline Offer expiration\\n   */\\n  function createOffer(\\n    address _nftAddress,\\n    uint256 _tokenId,\\n    IERC20Upgradeable _payToken,\\n    uint256 _quantity,\\n    uint256 _pricePerItem,\\n    uint256 _deadline\\n  ) external offerNotExists(_nftAddress, _tokenId, msg.sender) {\\n    require(\\n      IERC165Upgradeable(_nftAddress).supportsInterface(INTERFACE_ID_ERC721) ||\\n        IERC165Upgradeable(_nftAddress).supportsInterface(INTERFACE_ID_ERC1155),\\n      \\\"invalid nft address\\\"\\n    );\\n\\n    IOPGamesAuction auction = IOPGamesAuction(addressRegistry.auction());\\n\\n    (, , , uint256 startTime, , bool resulted) = auction.auctions(_nftAddress, _tokenId);\\n\\n    require(startTime == 0 || resulted == true, \\\"cannot place an offer if auction is going on\\\");\\n\\n    require(_deadline > _getNow(), \\\"invalid expiration\\\");\\n\\n    _validPayToken(address(_payToken));\\n    require(address(_payToken) != address(0), \\\"disabled native token\\\");\\n\\n    offers[_nftAddress][_tokenId][msg.sender] = Offer(_payToken, _quantity, _pricePerItem, _deadline);\\n\\n    emit OfferCreated(msg.sender, _nftAddress, _tokenId, _quantity, address(_payToken), _pricePerItem, _deadline);\\n  }\\n\\n  /**\\n   * @notice Method for canceling the offer\\n   * @param _nftAddress Addres of NFT contract\\n   * @param _tokenId Token ID of NFT\\n   */\\n  function cancelOffer(address _nftAddress, uint256 _tokenId) external {\\n    delete (offers[_nftAddress][_tokenId][msg.sender]);\\n\\n    emit OfferCanceled(msg.sender, _nftAddress, _tokenId);\\n  }\\n\\n  /**\\n   * @notice Method for accepting the offer\\n   * @param _nftAddress Addres of NFT contract\\n   * @param _tokenId Token ID of NFT\\n   * @param _creator Offer creator address\\n   */\\n  function acceptOffer(\\n    address _nftAddress,\\n    uint256 _tokenId,\\n    address _creator\\n  ) external nonReentrant offerExists(_nftAddress, _tokenId, _creator) {\\n    Offer memory offer = offers[_nftAddress][_tokenId][_creator];\\n\\n    _validOwner(_nftAddress, _tokenId, msg.sender, offer.quantity);\\n\\n    uint256 price = offer.pricePerItem * offer.quantity;\\n    uint256 feeAmount = (price * platformFee) / 100_0;\\n\\n    _tokenTransferFrom(_creator, feeRecipient, address(offer.payToken), feeAmount);\\n    _tokenTransferFrom(_creator, msg.sender, address(offer.payToken), price - feeAmount);\\n\\n    // Transfer NFT to buyer\\n    if (IERC165Upgradeable(_nftAddress).supportsInterface(INTERFACE_ID_ERC721)) {\\n      IERC721Upgradeable(_nftAddress).safeTransferFrom(msg.sender, _creator, _tokenId);\\n    } else {\\n      IERC1155Upgradeable(_nftAddress).safeTransferFrom(msg.sender, _creator, _tokenId, offer.quantity, bytes(\\\"\\\"));\\n    }\\n\\n    delete (listings[_nftAddress][_tokenId][msg.sender]);\\n    delete (offers[_nftAddress][_tokenId][_creator]);\\n\\n    emit ItemSold(\\n      msg.sender,\\n      _creator,\\n      _nftAddress,\\n      _tokenId,\\n      offer.quantity,\\n      address(offer.payToken),\\n      offer.pricePerItem\\n    );\\n\\n    emit OfferCanceled(_creator, _nftAddress, _tokenId);\\n  }\\n\\n  /**\\n   @notice Update platform fee\\n   @dev Only owner\\n   @param _platformFee new platform fee\\n   */\\n  function updatePlatformFee(uint256 _platformFee) external onlyOwner {\\n    require(_platformFee < 100_0, \\\"platform fee exceeded\\\");\\n\\n    emit PlatformFeeUpdated(msg.sender, platformFee, _platformFee);\\n\\n    platformFee = _platformFee;\\n  }\\n\\n  /**\\n   @notice Update platform fee address\\n   @dev Only owner\\n   @param _feeRecipient new platform fee recipient\\n   */\\n  function updatePlatformFeeRecipient(address payable _feeRecipient) external onlyOwner {\\n    require(_feeRecipient != address(0), \\\"unexpected fee recipient\\\");\\n\\n    emit PlatformFeeRecipientUpdated(msg.sender, feeRecipient, _feeRecipient);\\n\\n    feeRecipient = _feeRecipient;\\n  }\\n\\n  function _getNow() internal view virtual returns (uint256) {\\n    return block.timestamp;\\n  }\\n\\n  /**\\n   * @notice Validate the collection\\n   * @param _nftAddress Collection address\\n   */\\n  function _validCollection(address _nftAddress) internal view {\\n    require(\\n      (addressRegistry.tokenRegistry() != address(0) &&\\n        ITokenRegistry(addressRegistry.tokenRegistry()).enabledCollection(_nftAddress)),\\n      \\\"invalid collection\\\"\\n    );\\n  }\\n\\n  /**\\n   * @notice Validate the payment token\\n   * @dev Zero address means the native token\\n   * @param _payToken Payment token address\\n   */\\n  function _validPayToken(address _payToken) internal view {\\n    require(\\n      _payToken == address(0) ||\\n        (addressRegistry.tokenRegistry() != address(0) &&\\n          ITokenRegistry(addressRegistry.tokenRegistry()).enabledPayToken(_payToken)),\\n      \\\"invalid pay token\\\"\\n    );\\n  }\\n\\n  /**\\n   * @notice Validate the NFT owner and the quantity of the item\\n   * @param _nftAddress Address of NFT contract\\n   * @param _tokenId Token ID of NFT\\n   * @param _owner NFT onwer address to validate\\n   * @param _quantity Quantity of the item\\n   */\\n  function _validOwner(\\n    address _nftAddress,\\n    uint256 _tokenId,\\n    address _owner,\\n    uint256 _quantity\\n  ) internal view {\\n    if (IERC165Upgradeable(_nftAddress).supportsInterface(INTERFACE_ID_ERC721)) {\\n      IERC721Upgradeable nft = IERC721Upgradeable(_nftAddress);\\n      require(nft.ownerOf(_tokenId) == _owner, \\\"not owning item\\\");\\n    } else if (IERC165Upgradeable(_nftAddress).supportsInterface(INTERFACE_ID_ERC1155)) {\\n      IERC1155Upgradeable nft = IERC1155Upgradeable(_nftAddress);\\n      require(nft.balanceOf(_owner, _tokenId) >= _quantity, \\\"not owning item\\\");\\n    } else {\\n      revert(\\\"invalid nft address\\\");\\n    }\\n  }\\n\\n  function _cancelListing(\\n    address _nftAddress,\\n    uint256 _tokenId,\\n    address _owner\\n  ) private {\\n    Listing memory listedItem = listings[_nftAddress][_tokenId][_owner];\\n\\n    _validOwner(_nftAddress, _tokenId, _owner, listedItem.quantity);\\n\\n    delete (listings[_nftAddress][_tokenId][_owner]);\\n\\n    emit ItemCanceled(_owner, _nftAddress, _tokenId);\\n  }\\n\\n  /**\\n   * @notice Transfer tokens\\n   * @dev If the _payToken address is zero, it means the native token\\n   * @param _from Sender address\\n   * @param _to Receiver address\\n   * @param _payToken Payment token address\\n   * @param _amount Payment token amount\\n   */\\n  function _tokenTransferFrom(\\n    address _from,\\n    address _to,\\n    address _payToken,\\n    uint256 _amount\\n  ) private {\\n    if (_payToken == address(0)) {\\n      require(_from == address(this), \\\"invalid Ether sender\\\");\\n\\n      (bool sent, ) = payable(_to).call{value: _amount}(\\\"\\\");\\n      require(sent, \\\"failed to send Ether\\\");\\n    } else {\\n      IERC20Upgradeable(_payToken).safeTransferFrom(_from, _to, _amount);\\n    }\\n  }\\n\\n  /**\\n   * @notice Pause Marketplace\\n   * @dev Only owner\\n   */\\n  function pause() external onlyOwner {\\n    _pause();\\n  }\\n\\n  /**\\n   * @notice Resume Marketplace\\n   * @dev Only owner\\n   */\\n  function unpause() external onlyOwner {\\n    _unpause();\\n  }\\n}\\n\",\"keccak256\":\"0x361c7290a515571cac171b5773f48bbeaa7ccc9d637febbf6106bb03a8f4624a\",\"license\":\"MIT\"},\"contracts/interfaces/IAddressRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.11;\\n\\ninterface IAddressRegistry {\\n  function tokenRegistry() external view returns (address);\\n\\n  function marketplace() external view returns (address);\\n\\n  function auction() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc6dc47d2716785905504b39539470292680f58a1a8e4aa683d5b2102ca37392a\",\"license\":\"MIT\"},\"contracts/interfaces/IOPGamesAuction.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.11;\\n\\ninterface IOPGamesAuction {\\n  function auctions(address, uint256)\\n    external\\n    view\\n    returns (\\n      address,\\n      address,\\n      uint256,\\n      uint256,\\n      uint256,\\n      bool\\n    );\\n}\\n\",\"keccak256\":\"0x5c515f91126d6b8e5bd4eff54ea4205765e3784865ef84eea2169c8f48c63d17\",\"license\":\"MIT\"},\"contracts/interfaces/ITokenRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.11;\\n\\ninterface ITokenRegistry {\\n  function enabledCollection(address _nftAddress) external view returns (bool);\\n\\n  function enabledPayToken(address _token) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xfd08d08dfefdd7483e08f8eca9651a24976f3c8a8d88cfdcdf84932a253a014f\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506139e3806100206000396000f3fe60806040526004361061016e5760003560e01c8063715018a6116100cb578063b2ddee061161007f578063f2fde38b11610059578063f2fde38b1461047c578063f3ad65f41461049c578063f5fe7f71146104bc57600080fd5b8063b2ddee06146103b5578063d3f494cc146103d5578063e984f2eb1461045c57600080fd5b806385f9d345116100b057806385f9d345146103645780638da5cb5b14610377578063aa0b59881461039557600080fd5b8063715018a61461033a5780638456cb591461034f57600080fd5b80633fc1cc26116101225780634690484011610107578063469048401461025a5780635c975abb146102925780636bd3a64b146102b557600080fd5b80633fc1cc261461021a57806342cbb4b81461023a57600080fd5b806326232a2e1161015357806326232a2e146101bc5780633bbb2806146101e55780633f4ba83a1461020557600080fd5b8063058a56ac1461017a5780631794bb3c1461019c57600080fd5b3661017557005b600080fd5b34801561018657600080fd5b5061019a61019536600461357c565b6104dc565b005b3480156101a857600080fd5b5061019a6101b73660046135a8565b61055f565b3480156101c857600080fd5b506101d260cc5481565b6040519081526020015b60405180910390f35b3480156101f157600080fd5b5061019a6102003660046135e9565b610764565b34801561021157600080fd5b5061019a610cb6565b34801561022657600080fd5b5061019a61023536600461362b565b610d1a565b34801561024657600080fd5b5061019a610255366004613687565b61129a565b34801561026657600080fd5b5060cb5461027a906001600160a01b031681565b6040516001600160a01b0390911681526020016101dc565b34801561029e57600080fd5b5060975460ff1660405190151581526020016101dc565b3480156102c157600080fd5b506103126102d03660046135e9565b60c9602090815260009384526040808520825292845282842090528252902080546001820154600283015460039093015491926001600160a01b039091169184565b604080519485526001600160a01b0390931660208501529183015260608201526080016101dc565b34801561034657600080fd5b5061019a611804565b34801561035b57600080fd5b5061019a611868565b61019a6103723660046136e3565b6118ca565b34801561038357600080fd5b506033546001600160a01b031661027a565b3480156103a157600080fd5b5061019a6103b0366004613736565b611ba7565b3480156103c157600080fd5b5061019a6103d036600461357c565b611c95565b3480156103e157600080fd5b506104326103f03660046135e9565b60ca60209081526000938452604080852082529284528284209052825290208054600182015460028301546003909301546001600160a01b0390921692909184565b604080516001600160a01b03909516855260208501939093529183015260608201526080016101dc565b34801561046857600080fd5b5061019a61047736600461374f565b611da7565b34801561048857600080fd5b5061019a610497366004613797565b611f66565b3480156104a857600080fd5b5060cd5461027a906001600160a01b031681565b3480156104c857600080fd5b5061019a6104d7366004613797565b612048565b6001600160a01b038216600081815260ca6020908152604080832085845282528083203380855290835281842080546001600160a01b0319168155600181018590556002810185905560030193909355518481527fc6e24dcedb16cc237925b586889d0a38102c719734d6cc56acb89b013099b3a7910160405180910390a35050565b600054610100900460ff1680610578575060005460ff16155b6105e05760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b600054610100900460ff16158015610602576000805461ffff19166101011790555b61060a612156565b610612612218565b61061a6122be565b6001600160a01b0384166106705760405162461bcd60e51b815260206004820152601b60248201527f756e65787065637465642061646472657373207265676973747279000000000060448201526064016105d7565b6001600160a01b0383166106c65760405162461bcd60e51b815260206004820152601860248201527f756e65787065637465642066656520726563697069656e74000000000000000060448201526064016105d7565b6103e882106107175760405162461bcd60e51b815260206004820152601560248201527f706c6174666f726d20666565206578636565646564000000000000000000000060448201526064016105d7565b60cd80546001600160a01b038087166001600160a01b03199283161790925560cb80549286169290911691909117905560cc829055801561075e576000805461ff00191690555b50505050565b600260655414156107b75760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016105d7565b600260658190556001600160a01b03808516600090815260ca6020908152604080832087845282528083208487168452825291829020825160808101845281549094168452600181015491840182905293840154918301919091526003909201546060820152849184918491158015906108345750428160600151115b6108805760405162461bcd60e51b815260206004820152601b60248201527f6f66666572206e6f7420657869737473206f722065787069726564000000000060448201526064016105d7565b6001600160a01b03808816600090815260ca602090815260408083208a845282528083208985168452825291829020825160808101845281549094168452600181015491840182905260028101549284019290925260039091015460608301526108ef9089908990339061236c565b60008160200151826040015161090591906137ca565b905060006103e860cc548361091a91906137ca565b61092491906137e9565b60cb548451919250610942918a916001600160a01b031690846125c5565b825161095b9089903390610956858761380b565b6125c5565b6040516301ffc9a760e01b81526380ac58cd60e01b60048201526001600160a01b038b16906301ffc9a790602401602060405180830381865afa1580156109a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ca9190613837565b15610a3c57604051632142170760e11b81523360048201526001600160a01b038981166024830152604482018b90528b16906342842e0e90606401600060405180830381600087803b158015610a1f57600080fd5b505af1158015610a33573d6000803e3d6000fd5b50505050610ab6565b896001600160a01b031663f242432a338a8c8760200151604051806020016040528060008152506040518663ffffffff1660e01b8152600401610a839594939291906138aa565b600060405180830381600087803b158015610a9d57600080fd5b505af1158015610ab1573d6000803e3d6000fd5b505050505b60c960008b6001600160a01b03166001600160a01b0316815260200190815260200160002060008a81526020019081526020016000206000336001600160a01b03166001600160a01b031681526020019081526020016000206000808201600090556001820160006101000a8154906001600160a01b03021916905560028201600090556003820160009055505060ca60008b6001600160a01b03166001600160a01b0316815260200190815260200160002060008a81526020019081526020016000206000896001600160a01b03166001600160a01b03168152602001908152602001600020600080820160006101000a8154906001600160a01b0302191690556001820160009055600282016000905560038201600090555050896001600160a01b0316886001600160a01b0316336001600160a01b03167f33288df29d0f4a78de0aab5956626ed28d0abeb944e8f0d78dd1031efb53941f8c876020015188600001518960400151604051610c50949392919093845260208401929092526001600160a01b03166040830152606082015260800190565b60405180910390a4896001600160a01b0316886001600160a01b03167fc6e24dcedb16cc237925b586889d0a38102c719734d6cc56acb89b013099b3a78b604051610c9d91815260200190565b60405180910390a3505060016065555050505050505050565b6033546001600160a01b03163314610d105760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105d7565b610d186126e3565b565b6001600160a01b03808716600090815260c960209081526040808320898452825280832033808552908352928190208151608081018352815480825260018301549096169381019390935260028101549183019190915260030154606082015288928892919015610dcd5760405162461bcd60e51b815260206004820152600e60248201527f616c7265616479206c697374656400000000000000000000000000000000000060448201526064016105d7565b6040516301ffc9a760e01b81526380ac58cd60e01b60048201526001600160a01b038b16906301ffc9a790602401602060405180830381865afa158015610e18573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e3c9190613837565b15610fb6576040516331a9108f60e11b8152600481018a90528a9033906001600160a01b03831690636352211e90602401602060405180830381865afa158015610e8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eae91906138e2565b6001600160a01b031614610ef65760405162461bcd60e51b815260206004820152600f60248201526e6e6f74206f776e696e67206974656d60881b60448201526064016105d7565b60405163e985e9c560e01b81523360048201523060248201526001600160a01b0382169063e985e9c590604401602060405180830381865afa158015610f40573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f649190613837565b610fb05760405162461bcd60e51b815260206004820152601160248201527f6974656d206e6f7420617070726f76656400000000000000000000000000000060448201526064016105d7565b50611131565b6040516301ffc9a760e01b8152636cdb3d1360e11b60048201526001600160a01b038b16906301ffc9a790602401602060405180830381865afa158015611001573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110259190613837565b156110e957604051627eeac760e11b8152336004820152602481018a90528a9089906001600160a01b0383169062fdd58e90604401602060405180830381865afa158015611077573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061109b91906138ff565b1015610ef65760405162461bcd60e51b815260206004820152601560248201527f6d75737420686f6c6420656e6f756768206e667473000000000000000000000060448201526064016105d7565b60405162461bcd60e51b815260206004820152601360248201527f696e76616c6964206e667420616464726573730000000000000000000000000060448201526064016105d7565b61113a8a61277f565b6111438761292e565b6040518060800160405280898152602001886001600160a01b031681526020018781526020018681525060c960008c6001600160a01b03166001600160a01b0316815260200190815260200160002060008b81526020019081526020016000206000336001600160a01b03166001600160a01b031681526020019081526020016000206000820151816000015560208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506040820151816002015560608201518160030155905050896001600160a01b0316336001600160a01b03167fa0294f02f8ad82fe4744717b0f953a105547196cd3c67056200c1a4ae3aa26298b8b8b8b8b60405161128695949392919094855260208501939093526001600160a01b039190911660408401526060830152608082015260a00190565b60405180910390a350505050505050505050565b6001600160a01b03808716600090815260ca602090815260408083208984528252808320338085529083529281902081516080810183528154909516855260018101549285018390526002810154918501919091526003015460608401528892889291158061130d575042816060015111155b6113595760405162461bcd60e51b815260206004820152601560248201527f6f6666657220616c72656164792063726561746564000000000000000000000060448201526064016105d7565b6040516301ffc9a760e01b81526380ac58cd60e01b60048201526001600160a01b038b16906301ffc9a790602401602060405180830381865afa1580156113a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113c89190613837565b8061143d57506040516301ffc9a760e01b8152636cdb3d1360e11b60048201526001600160a01b038b16906301ffc9a790602401602060405180830381865afa158015611419573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061143d9190613837565b6114895760405162461bcd60e51b815260206004820152601360248201527f696e76616c6964206e667420616464726573730000000000000000000000000060448201526064016105d7565b60cd5460408051637d9f6db560e01b815290516000926001600160a01b031691637d9f6db59160048083019260209291908290030181865afa1580156114d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114f791906138e2565b60405163227c8e0f60e11b81526001600160a01b038d81166004830152602482018d90529192506000918291908416906344f91c1e9060440160c060405180830381865afa15801561154d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115719190613918565b9550509450505050816000148061158a57506001811515145b6115fc5760405162461bcd60e51b815260206004820152602c60248201527f63616e6e6f7420706c61636520616e206f666665722069662061756374696f6e60448201527f20697320676f696e67206f6e000000000000000000000000000000000000000060648201526084016105d7565b42881161164b5760405162461bcd60e51b815260206004820152601260248201527f696e76616c69642065787069726174696f6e000000000000000000000000000060448201526064016105d7565b6116548b61292e565b6001600160a01b038b166116aa5760405162461bcd60e51b815260206004820152601560248201527f64697361626c6564206e617469766520746f6b656e000000000000000000000060448201526064016105d7565b60405180608001604052808c6001600160a01b031681526020018b81526020018a81526020018981525060ca60008f6001600160a01b03166001600160a01b0316815260200190815260200160002060008e81526020019081526020016000206000336001600160a01b03166001600160a01b0316815260200190815260200160002060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506020820151816001015560408201518160020155606082015181600301559050508c6001600160a01b0316336001600160a01b03167f89f255157c655b5155655107b77c620998e5ad4e7485d749e4e6d7ddb63e70f68e8d8f8e8e6040516117ed95949392919094855260208501939093526001600160a01b039190911660408401526060830152608082015260a00190565b60405180910390a350505050505050505050505050565b6033546001600160a01b0316331461185e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105d7565b610d186000612aee565b6033546001600160a01b031633146118c25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105d7565b610d18612b40565b6002606554141561191d5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016105d7565b600260655560975460ff16156119685760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016105d7565b6001600160a01b03808516600090815260c96020908152604080832087845282528083208486168452825291829020825160808101845281548082526001830154909516928101929092526002810154928201929092526003909101546060820152859185918491611a0e5760405162461bcd60e51b815260206004820152600f60248201526e6e6f74206c6973746564206974656d60881b60448201526064016105d7565b6001600160a01b03808916600090815260c9602090815260408083208b84528252808320848a168452825291829020825160808101845281548082526001830154909516928101929092526002810154928201929092526003909101546060820152899189918891611a859085908590859061236c565b6060810151421015611ad95760405162461bcd60e51b815260206004820152601060248201527f6974656d206e6f742062757961626c650000000000000000000000000000000060448201526064016105d7565b6001600160a01b03808d16600090815260c9602090815260408083208f845282528083208d851684528252918290208251608081018452815481526001820154851692810183905260028201549381019390935260030154606083015290918c1614611b875760405162461bcd60e51b815260206004820152601160248201527f696e76616c69642070617920746f6b656e00000000000000000000000000000060448201526064016105d7565b611b938d8d8d8d612bbb565b505060016065555050505050505050505050565b6033546001600160a01b03163314611c015760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105d7565b6103e88110611c525760405162461bcd60e51b815260206004820152601560248201527f706c6174666f726d20666565206578636565646564000000000000000000000060448201526064016105d7565b60cc54604080519182526020820183905233917f8e93952c33ee6ff67b79915c106e3cc1bacf6c0ec664cbe66458449d0a7d9e6f910160405180910390a260cc55565b60026065541415611ce85760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016105d7565b600260658190556001600160a01b03808416600090815260c96020908152604080832086845282528083203380855290835292819020815160808101835281548082526001830154909616938101939093529485015490820152600390930154606084015284928492611d8f5760405162461bcd60e51b815260206004820152600f60248201526e6e6f74206c6973746564206974656d60881b60448201526064016105d7565b611d9a868633612ecb565b5050600160655550505050565b60026065541415611dfa5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016105d7565b600260658190556001600160a01b03808616600090815260c96020908152604080832088845282528083203380855290835292819020815160808101835281548082526001830154909616938101939093529485015490820152600390930154606084015286928692611ea15760405162461bcd60e51b815260206004820152600f60248201526e6e6f74206c6973746564206974656d60881b60448201526064016105d7565b6001600160a01b038816600090815260c9602090815260408083208a8452825280832033808552925290912080549091611ede918b918b9161236c565b611ee78761292e565b6001810180546001600160a01b0319166001600160a01b0389811691821790925560028301889055604080518b815260208101929092528101889052908a169033907f60a11f1619b1716bc2857bf610d4bc631336e14d197025fd5875c1aca1ac7cbd9060600160405180910390a35050600160655550505050505050565b6033546001600160a01b03163314611fc05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105d7565b6001600160a01b03811661203c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016105d7565b61204581612aee565b50565b6033546001600160a01b031633146120a25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105d7565b6001600160a01b0381166120f85760405162461bcd60e51b815260206004820152601860248201527f756e65787065637465642066656520726563697069656e74000000000000000060448201526064016105d7565b60cb546040516001600160a01b0380841692169033907fab62806cf85d2c6fd75af2ddc8a7ee75bcbafb825483826a3bdc14befb95da9c90600090a460cb80546001600160a01b0319166001600160a01b0392909216919091179055565b600054610100900460ff168061216f575060005460ff16155b6121d25760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016105d7565b600054610100900460ff161580156121f4576000805461ffff19166101011790555b6121fc612fc9565b61220461307a565b8015612045576000805461ff001916905550565b600054610100900460ff1680612231575060005460ff16155b6122945760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016105d7565b600054610100900460ff161580156122b6576000805461ffff19166101011790555b612204613121565b600054610100900460ff16806122d7575060005460ff16155b61233a5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016105d7565b600054610100900460ff1615801561235c576000805461ffff19166101011790555b612364612fc9565b6122046131d8565b6040516301ffc9a760e01b81526380ac58cd60e01b60048201526001600160a01b038516906301ffc9a790602401602060405180830381865afa1580156123b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123db9190613837565b1561249e576040516331a9108f60e11b81526004810184905284906001600160a01b038481169190831690636352211e90602401602060405180830381865afa15801561242c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061245091906138e2565b6001600160a01b0316146124985760405162461bcd60e51b815260206004820152600f60248201526e6e6f74206f776e696e67206974656d60881b60448201526064016105d7565b5061075e565b6040516301ffc9a760e01b8152636cdb3d1360e11b60048201526001600160a01b038516906301ffc9a790602401602060405180830381865afa1580156124e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061250d9190613837565b156110e957604051627eeac760e11b81526001600160a01b038381166004830152602482018590528591839183169062fdd58e90604401602060405180830381865afa158015612561573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061258591906138ff565b10156124985760405162461bcd60e51b815260206004820152600f60248201526e6e6f74206f776e696e67206974656d60881b60448201526064016105d7565b6001600160a01b0382166126ce576001600160a01b038416301461262b5760405162461bcd60e51b815260206004820152601460248201527f696e76616c69642045746865722073656e64657200000000000000000000000060448201526064016105d7565b6000836001600160a01b03168260405160006040518083038185875af1925050503d8060008114612678576040519150601f19603f3d011682016040523d82523d6000602084013e61267d565b606091505b50509050806124985760405162461bcd60e51b815260206004820152601460248201527f6661696c656420746f2073656e6420457468657200000000000000000000000060448201526064016105d7565b61075e6001600160a01b038316858584613294565b60975460ff166127355760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f742070617573656400000000000000000000000060448201526064016105d7565b6097805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b60cd5460408051639d23c4c760e01b815290516000926001600160a01b031691639d23c4c79160048083019260209291908290030181865afa1580156127c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127ed91906138e2565b6001600160a01b0316141580156128e2575060cd60009054906101000a90046001600160a01b03166001600160a01b0316639d23c4c76040518163ffffffff1660e01b8152600401602060405180830381865afa158015612852573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061287691906138e2565b60405163b17721a760e01b81526001600160a01b038381166004830152919091169063b17721a790602401602060405180830381865afa1580156128be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128e29190613837565b6120455760405162461bcd60e51b815260206004820152601260248201527f696e76616c696420636f6c6c656374696f6e000000000000000000000000000060448201526064016105d7565b6001600160a01b0381161580612aa2575060cd5460408051639d23c4c760e01b815290516000926001600160a01b031691639d23c4c79160048083019260209291908290030181865afa158015612989573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129ad91906138e2565b6001600160a01b031614158015612aa2575060cd60009054906101000a90046001600160a01b03166001600160a01b0316639d23c4c76040518163ffffffff1660e01b8152600401602060405180830381865afa158015612a12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a3691906138e2565b6040516314d1e48160e01b81526001600160a01b03838116600483015291909116906314d1e48190602401602060405180830381865afa158015612a7e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612aa29190613837565b6120455760405162461bcd60e51b815260206004820152601160248201527f696e76616c69642070617920746f6b656e00000000000000000000000000000060448201526064016105d7565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60975460ff1615612b865760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016105d7565b6097805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586127623390565b6001600160a01b03808516600090815260c9602090815260408083208784528252808320858516845282528083208151608081018352815480825260018301549096169381019390935260028101549183018290526003015460608301529092612c24916137ca565b905060006103e860cc5483612c3991906137ca565b612c4391906137e9565b90506001600160a01b038516612ca257813414612ca25760405162461bcd60e51b815260206004820152601960248201527f696e73756666696369656e7420457468657220746f206275790000000000000060448201526064016105d7565b60cb54612cbb9033906001600160a01b031687846125c5565b612ccb338587610956858761380b565b6040516301ffc9a760e01b81526380ac58cd60e01b60048201526001600160a01b038816906301ffc9a790602401602060405180830381865afa158015612d16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d3a9190613837565b15612dac57604051632142170760e11b81526001600160a01b038581166004830152336024830152604482018890528816906342842e0e90606401600060405180830381600087803b158015612d8f57600080fd5b505af1158015612da3573d6000803e3d6000fd5b50505050612e1e565b825160408051602081018252600081529051637921219560e11b81526001600160a01b038a169263f242432a92612deb92899233928d926004016138aa565b600060405180830381600087803b158015612e0557600080fd5b505af1158015612e19573d6000803e3d6000fd5b505050505b6001600160a01b03878116600081815260c9602090815260408083208b845282528083208986168085529083528184208481556001810180546001600160a01b0319169055600281018590556003019390935587518882015182518d815293840191909152948a168282015260608201949094529251919233927f33288df29d0f4a78de0aab5956626ed28d0abeb944e8f0d78dd1031efb53941f9181900360800190a450505050505050565b6001600160a01b03808416600090815260c9602090815260408083208684528252808320858516845282529182902082516080810184528154808252600183015490951692810192909252600281015492820192909252600390910154606082015290612f3d9085908590859061236c565b6001600160a01b03848116600081815260c96020908152604080832088845282528083209487168084529482528083208381556001810180546001600160a01b0319169055600281018490556003019290925590518681529192917f9ba1a3cb55ce8d63d072a886f94d2a744f50cddf82128e897d0661f5ec623158910160405180910390a350505050565b600054610100900460ff1680612fe2575060005460ff16155b6130455760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016105d7565b600054610100900460ff16158015612204576000805461ffff19166101011790558015612045576000805461ff001916905550565b600054610100900460ff1680613093575060005460ff16155b6130f65760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016105d7565b600054610100900460ff16158015613118576000805461ffff19166101011790555b61220433612aee565b600054610100900460ff168061313a575060005460ff16155b61319d5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016105d7565b600054610100900460ff161580156131bf576000805461ffff19166101011790555b60016065558015612045576000805461ff001916905550565b600054610100900460ff16806131f1575060005460ff16155b6132545760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016105d7565b600054610100900460ff16158015613276576000805461ffff19166101011790555b6097805460ff191690558015612045576000805461ff001916905550565b604080516001600160a01b038581166024830152848116604483015260648083018590528351808403909101815260849092018352602080830180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b17905283518085019094528084527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65649084015261075e928792916000916133419185169084906133d6565b8051909150156133d1578080602001905181019061335f9190613837565b6133d15760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016105d7565b505050565b60606133e584846000856133ef565b90505b9392505050565b6060824710156134675760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016105d7565b843b6134b55760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016105d7565b600080866001600160a01b031685876040516134d1919061397e565b60006040518083038185875af1925050503d806000811461350e576040519150601f19603f3d011682016040523d82523d6000602084013e613513565b606091505b509150915061352382828661352e565b979650505050505050565b6060831561353d5750816133e8565b82511561354d5782518084602001fd5b8160405162461bcd60e51b81526004016105d7919061399a565b6001600160a01b038116811461204557600080fd5b6000806040838503121561358f57600080fd5b823561359a81613567565b946020939093013593505050565b6000806000606084860312156135bd57600080fd5b83356135c881613567565b925060208401356135d881613567565b929592945050506040919091013590565b6000806000606084860312156135fe57600080fd5b833561360981613567565b925060208401359150604084013561362081613567565b809150509250925092565b60008060008060008060c0878903121561364457600080fd5b863561364f81613567565b95506020870135945060408701359350606087013561366d81613567565b9598949750929560808101359460a0909101359350915050565b60008060008060008060c087890312156136a057600080fd5b86356136ab81613567565b95506020870135945060408701356136c281613567565b959894975094956060810135955060808101359460a0909101359350915050565b600080600080608085870312156136f957600080fd5b843561370481613567565b935060208501359250604085013561371b81613567565b9150606085013561372b81613567565b939692955090935050565b60006020828403121561374857600080fd5b5035919050565b6000806000806080858703121561376557600080fd5b843561377081613567565b935060208501359250604085013561378781613567565b9396929550929360600135925050565b6000602082840312156137a957600080fd5b81356133e881613567565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156137e4576137e46137b4565b500290565b60008261380657634e487b7160e01b600052601260045260246000fd5b500490565b60008282101561381d5761381d6137b4565b500390565b8051801515811461383257600080fd5b919050565b60006020828403121561384957600080fd5b6133e882613822565b60005b8381101561386d578181015183820152602001613855565b8381111561075e5750506000910152565b60008151808452613896816020860160208601613852565b601f01601f19169290920160200192915050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a0608083015261352360a083018461387e565b6000602082840312156138f457600080fd5b81516133e881613567565b60006020828403121561391157600080fd5b5051919050565b60008060008060008060c0878903121561393157600080fd5b865161393c81613567565b602088015190965061394d81613567565b8095505060408701519350606087015192506080870151915061397260a08801613822565b90509295509295509295565b60008251613990818460208701613852565b9190910192915050565b6020815260006133e8602083018461387e56fea26469706673582212208171ef3a2e863330f60984b7b9dda56da0eada83a471a384da45ef76c02e89b864736f6c634300080b0033",
  "deployedBytecode": "0x60806040526004361061016e5760003560e01c8063715018a6116100cb578063b2ddee061161007f578063f2fde38b11610059578063f2fde38b1461047c578063f3ad65f41461049c578063f5fe7f71146104bc57600080fd5b8063b2ddee06146103b5578063d3f494cc146103d5578063e984f2eb1461045c57600080fd5b806385f9d345116100b057806385f9d345146103645780638da5cb5b14610377578063aa0b59881461039557600080fd5b8063715018a61461033a5780638456cb591461034f57600080fd5b80633fc1cc26116101225780634690484011610107578063469048401461025a5780635c975abb146102925780636bd3a64b146102b557600080fd5b80633fc1cc261461021a57806342cbb4b81461023a57600080fd5b806326232a2e1161015357806326232a2e146101bc5780633bbb2806146101e55780633f4ba83a1461020557600080fd5b8063058a56ac1461017a5780631794bb3c1461019c57600080fd5b3661017557005b600080fd5b34801561018657600080fd5b5061019a61019536600461357c565b6104dc565b005b3480156101a857600080fd5b5061019a6101b73660046135a8565b61055f565b3480156101c857600080fd5b506101d260cc5481565b6040519081526020015b60405180910390f35b3480156101f157600080fd5b5061019a6102003660046135e9565b610764565b34801561021157600080fd5b5061019a610cb6565b34801561022657600080fd5b5061019a61023536600461362b565b610d1a565b34801561024657600080fd5b5061019a610255366004613687565b61129a565b34801561026657600080fd5b5060cb5461027a906001600160a01b031681565b6040516001600160a01b0390911681526020016101dc565b34801561029e57600080fd5b5060975460ff1660405190151581526020016101dc565b3480156102c157600080fd5b506103126102d03660046135e9565b60c9602090815260009384526040808520825292845282842090528252902080546001820154600283015460039093015491926001600160a01b039091169184565b604080519485526001600160a01b0390931660208501529183015260608201526080016101dc565b34801561034657600080fd5b5061019a611804565b34801561035b57600080fd5b5061019a611868565b61019a6103723660046136e3565b6118ca565b34801561038357600080fd5b506033546001600160a01b031661027a565b3480156103a157600080fd5b5061019a6103b0366004613736565b611ba7565b3480156103c157600080fd5b5061019a6103d036600461357c565b611c95565b3480156103e157600080fd5b506104326103f03660046135e9565b60ca60209081526000938452604080852082529284528284209052825290208054600182015460028301546003909301546001600160a01b0390921692909184565b604080516001600160a01b03909516855260208501939093529183015260608201526080016101dc565b34801561046857600080fd5b5061019a61047736600461374f565b611da7565b34801561048857600080fd5b5061019a610497366004613797565b611f66565b3480156104a857600080fd5b5060cd5461027a906001600160a01b031681565b3480156104c857600080fd5b5061019a6104d7366004613797565b612048565b6001600160a01b038216600081815260ca6020908152604080832085845282528083203380855290835281842080546001600160a01b0319168155600181018590556002810185905560030193909355518481527fc6e24dcedb16cc237925b586889d0a38102c719734d6cc56acb89b013099b3a7910160405180910390a35050565b600054610100900460ff1680610578575060005460ff16155b6105e05760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b600054610100900460ff16158015610602576000805461ffff19166101011790555b61060a612156565b610612612218565b61061a6122be565b6001600160a01b0384166106705760405162461bcd60e51b815260206004820152601b60248201527f756e65787065637465642061646472657373207265676973747279000000000060448201526064016105d7565b6001600160a01b0383166106c65760405162461bcd60e51b815260206004820152601860248201527f756e65787065637465642066656520726563697069656e74000000000000000060448201526064016105d7565b6103e882106107175760405162461bcd60e51b815260206004820152601560248201527f706c6174666f726d20666565206578636565646564000000000000000000000060448201526064016105d7565b60cd80546001600160a01b038087166001600160a01b03199283161790925560cb80549286169290911691909117905560cc829055801561075e576000805461ff00191690555b50505050565b600260655414156107b75760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016105d7565b600260658190556001600160a01b03808516600090815260ca6020908152604080832087845282528083208487168452825291829020825160808101845281549094168452600181015491840182905293840154918301919091526003909201546060820152849184918491158015906108345750428160600151115b6108805760405162461bcd60e51b815260206004820152601b60248201527f6f66666572206e6f7420657869737473206f722065787069726564000000000060448201526064016105d7565b6001600160a01b03808816600090815260ca602090815260408083208a845282528083208985168452825291829020825160808101845281549094168452600181015491840182905260028101549284019290925260039091015460608301526108ef9089908990339061236c565b60008160200151826040015161090591906137ca565b905060006103e860cc548361091a91906137ca565b61092491906137e9565b60cb548451919250610942918a916001600160a01b031690846125c5565b825161095b9089903390610956858761380b565b6125c5565b6040516301ffc9a760e01b81526380ac58cd60e01b60048201526001600160a01b038b16906301ffc9a790602401602060405180830381865afa1580156109a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ca9190613837565b15610a3c57604051632142170760e11b81523360048201526001600160a01b038981166024830152604482018b90528b16906342842e0e90606401600060405180830381600087803b158015610a1f57600080fd5b505af1158015610a33573d6000803e3d6000fd5b50505050610ab6565b896001600160a01b031663f242432a338a8c8760200151604051806020016040528060008152506040518663ffffffff1660e01b8152600401610a839594939291906138aa565b600060405180830381600087803b158015610a9d57600080fd5b505af1158015610ab1573d6000803e3d6000fd5b505050505b60c960008b6001600160a01b03166001600160a01b0316815260200190815260200160002060008a81526020019081526020016000206000336001600160a01b03166001600160a01b031681526020019081526020016000206000808201600090556001820160006101000a8154906001600160a01b03021916905560028201600090556003820160009055505060ca60008b6001600160a01b03166001600160a01b0316815260200190815260200160002060008a81526020019081526020016000206000896001600160a01b03166001600160a01b03168152602001908152602001600020600080820160006101000a8154906001600160a01b0302191690556001820160009055600282016000905560038201600090555050896001600160a01b0316886001600160a01b0316336001600160a01b03167f33288df29d0f4a78de0aab5956626ed28d0abeb944e8f0d78dd1031efb53941f8c876020015188600001518960400151604051610c50949392919093845260208401929092526001600160a01b03166040830152606082015260800190565b60405180910390a4896001600160a01b0316886001600160a01b03167fc6e24dcedb16cc237925b586889d0a38102c719734d6cc56acb89b013099b3a78b604051610c9d91815260200190565b60405180910390a3505060016065555050505050505050565b6033546001600160a01b03163314610d105760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105d7565b610d186126e3565b565b6001600160a01b03808716600090815260c960209081526040808320898452825280832033808552908352928190208151608081018352815480825260018301549096169381019390935260028101549183019190915260030154606082015288928892919015610dcd5760405162461bcd60e51b815260206004820152600e60248201527f616c7265616479206c697374656400000000000000000000000000000000000060448201526064016105d7565b6040516301ffc9a760e01b81526380ac58cd60e01b60048201526001600160a01b038b16906301ffc9a790602401602060405180830381865afa158015610e18573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e3c9190613837565b15610fb6576040516331a9108f60e11b8152600481018a90528a9033906001600160a01b03831690636352211e90602401602060405180830381865afa158015610e8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eae91906138e2565b6001600160a01b031614610ef65760405162461bcd60e51b815260206004820152600f60248201526e6e6f74206f776e696e67206974656d60881b60448201526064016105d7565b60405163e985e9c560e01b81523360048201523060248201526001600160a01b0382169063e985e9c590604401602060405180830381865afa158015610f40573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f649190613837565b610fb05760405162461bcd60e51b815260206004820152601160248201527f6974656d206e6f7420617070726f76656400000000000000000000000000000060448201526064016105d7565b50611131565b6040516301ffc9a760e01b8152636cdb3d1360e11b60048201526001600160a01b038b16906301ffc9a790602401602060405180830381865afa158015611001573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110259190613837565b156110e957604051627eeac760e11b8152336004820152602481018a90528a9089906001600160a01b0383169062fdd58e90604401602060405180830381865afa158015611077573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061109b91906138ff565b1015610ef65760405162461bcd60e51b815260206004820152601560248201527f6d75737420686f6c6420656e6f756768206e667473000000000000000000000060448201526064016105d7565b60405162461bcd60e51b815260206004820152601360248201527f696e76616c6964206e667420616464726573730000000000000000000000000060448201526064016105d7565b61113a8a61277f565b6111438761292e565b6040518060800160405280898152602001886001600160a01b031681526020018781526020018681525060c960008c6001600160a01b03166001600160a01b0316815260200190815260200160002060008b81526020019081526020016000206000336001600160a01b03166001600160a01b031681526020019081526020016000206000820151816000015560208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506040820151816002015560608201518160030155905050896001600160a01b0316336001600160a01b03167fa0294f02f8ad82fe4744717b0f953a105547196cd3c67056200c1a4ae3aa26298b8b8b8b8b60405161128695949392919094855260208501939093526001600160a01b039190911660408401526060830152608082015260a00190565b60405180910390a350505050505050505050565b6001600160a01b03808716600090815260ca602090815260408083208984528252808320338085529083529281902081516080810183528154909516855260018101549285018390526002810154918501919091526003015460608401528892889291158061130d575042816060015111155b6113595760405162461bcd60e51b815260206004820152601560248201527f6f6666657220616c72656164792063726561746564000000000000000000000060448201526064016105d7565b6040516301ffc9a760e01b81526380ac58cd60e01b60048201526001600160a01b038b16906301ffc9a790602401602060405180830381865afa1580156113a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113c89190613837565b8061143d57506040516301ffc9a760e01b8152636cdb3d1360e11b60048201526001600160a01b038b16906301ffc9a790602401602060405180830381865afa158015611419573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061143d9190613837565b6114895760405162461bcd60e51b815260206004820152601360248201527f696e76616c6964206e667420616464726573730000000000000000000000000060448201526064016105d7565b60cd5460408051637d9f6db560e01b815290516000926001600160a01b031691637d9f6db59160048083019260209291908290030181865afa1580156114d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114f791906138e2565b60405163227c8e0f60e11b81526001600160a01b038d81166004830152602482018d90529192506000918291908416906344f91c1e9060440160c060405180830381865afa15801561154d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115719190613918565b9550509450505050816000148061158a57506001811515145b6115fc5760405162461bcd60e51b815260206004820152602c60248201527f63616e6e6f7420706c61636520616e206f666665722069662061756374696f6e60448201527f20697320676f696e67206f6e000000000000000000000000000000000000000060648201526084016105d7565b42881161164b5760405162461bcd60e51b815260206004820152601260248201527f696e76616c69642065787069726174696f6e000000000000000000000000000060448201526064016105d7565b6116548b61292e565b6001600160a01b038b166116aa5760405162461bcd60e51b815260206004820152601560248201527f64697361626c6564206e617469766520746f6b656e000000000000000000000060448201526064016105d7565b60405180608001604052808c6001600160a01b031681526020018b81526020018a81526020018981525060ca60008f6001600160a01b03166001600160a01b0316815260200190815260200160002060008e81526020019081526020016000206000336001600160a01b03166001600160a01b0316815260200190815260200160002060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506020820151816001015560408201518160020155606082015181600301559050508c6001600160a01b0316336001600160a01b03167f89f255157c655b5155655107b77c620998e5ad4e7485d749e4e6d7ddb63e70f68e8d8f8e8e6040516117ed95949392919094855260208501939093526001600160a01b039190911660408401526060830152608082015260a00190565b60405180910390a350505050505050505050505050565b6033546001600160a01b0316331461185e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105d7565b610d186000612aee565b6033546001600160a01b031633146118c25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105d7565b610d18612b40565b6002606554141561191d5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016105d7565b600260655560975460ff16156119685760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016105d7565b6001600160a01b03808516600090815260c96020908152604080832087845282528083208486168452825291829020825160808101845281548082526001830154909516928101929092526002810154928201929092526003909101546060820152859185918491611a0e5760405162461bcd60e51b815260206004820152600f60248201526e6e6f74206c6973746564206974656d60881b60448201526064016105d7565b6001600160a01b03808916600090815260c9602090815260408083208b84528252808320848a168452825291829020825160808101845281548082526001830154909516928101929092526002810154928201929092526003909101546060820152899189918891611a859085908590859061236c565b6060810151421015611ad95760405162461bcd60e51b815260206004820152601060248201527f6974656d206e6f742062757961626c650000000000000000000000000000000060448201526064016105d7565b6001600160a01b03808d16600090815260c9602090815260408083208f845282528083208d851684528252918290208251608081018452815481526001820154851692810183905260028201549381019390935260030154606083015290918c1614611b875760405162461bcd60e51b815260206004820152601160248201527f696e76616c69642070617920746f6b656e00000000000000000000000000000060448201526064016105d7565b611b938d8d8d8d612bbb565b505060016065555050505050505050505050565b6033546001600160a01b03163314611c015760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105d7565b6103e88110611c525760405162461bcd60e51b815260206004820152601560248201527f706c6174666f726d20666565206578636565646564000000000000000000000060448201526064016105d7565b60cc54604080519182526020820183905233917f8e93952c33ee6ff67b79915c106e3cc1bacf6c0ec664cbe66458449d0a7d9e6f910160405180910390a260cc55565b60026065541415611ce85760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016105d7565b600260658190556001600160a01b03808416600090815260c96020908152604080832086845282528083203380855290835292819020815160808101835281548082526001830154909616938101939093529485015490820152600390930154606084015284928492611d8f5760405162461bcd60e51b815260206004820152600f60248201526e6e6f74206c6973746564206974656d60881b60448201526064016105d7565b611d9a868633612ecb565b5050600160655550505050565b60026065541415611dfa5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016105d7565b600260658190556001600160a01b03808616600090815260c96020908152604080832088845282528083203380855290835292819020815160808101835281548082526001830154909616938101939093529485015490820152600390930154606084015286928692611ea15760405162461bcd60e51b815260206004820152600f60248201526e6e6f74206c6973746564206974656d60881b60448201526064016105d7565b6001600160a01b038816600090815260c9602090815260408083208a8452825280832033808552925290912080549091611ede918b918b9161236c565b611ee78761292e565b6001810180546001600160a01b0319166001600160a01b0389811691821790925560028301889055604080518b815260208101929092528101889052908a169033907f60a11f1619b1716bc2857bf610d4bc631336e14d197025fd5875c1aca1ac7cbd9060600160405180910390a35050600160655550505050505050565b6033546001600160a01b03163314611fc05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105d7565b6001600160a01b03811661203c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016105d7565b61204581612aee565b50565b6033546001600160a01b031633146120a25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105d7565b6001600160a01b0381166120f85760405162461bcd60e51b815260206004820152601860248201527f756e65787065637465642066656520726563697069656e74000000000000000060448201526064016105d7565b60cb546040516001600160a01b0380841692169033907fab62806cf85d2c6fd75af2ddc8a7ee75bcbafb825483826a3bdc14befb95da9c90600090a460cb80546001600160a01b0319166001600160a01b0392909216919091179055565b600054610100900460ff168061216f575060005460ff16155b6121d25760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016105d7565b600054610100900460ff161580156121f4576000805461ffff19166101011790555b6121fc612fc9565b61220461307a565b8015612045576000805461ff001916905550565b600054610100900460ff1680612231575060005460ff16155b6122945760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016105d7565b600054610100900460ff161580156122b6576000805461ffff19166101011790555b612204613121565b600054610100900460ff16806122d7575060005460ff16155b61233a5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016105d7565b600054610100900460ff1615801561235c576000805461ffff19166101011790555b612364612fc9565b6122046131d8565b6040516301ffc9a760e01b81526380ac58cd60e01b60048201526001600160a01b038516906301ffc9a790602401602060405180830381865afa1580156123b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123db9190613837565b1561249e576040516331a9108f60e11b81526004810184905284906001600160a01b038481169190831690636352211e90602401602060405180830381865afa15801561242c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061245091906138e2565b6001600160a01b0316146124985760405162461bcd60e51b815260206004820152600f60248201526e6e6f74206f776e696e67206974656d60881b60448201526064016105d7565b5061075e565b6040516301ffc9a760e01b8152636cdb3d1360e11b60048201526001600160a01b038516906301ffc9a790602401602060405180830381865afa1580156124e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061250d9190613837565b156110e957604051627eeac760e11b81526001600160a01b038381166004830152602482018590528591839183169062fdd58e90604401602060405180830381865afa158015612561573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061258591906138ff565b10156124985760405162461bcd60e51b815260206004820152600f60248201526e6e6f74206f776e696e67206974656d60881b60448201526064016105d7565b6001600160a01b0382166126ce576001600160a01b038416301461262b5760405162461bcd60e51b815260206004820152601460248201527f696e76616c69642045746865722073656e64657200000000000000000000000060448201526064016105d7565b6000836001600160a01b03168260405160006040518083038185875af1925050503d8060008114612678576040519150601f19603f3d011682016040523d82523d6000602084013e61267d565b606091505b50509050806124985760405162461bcd60e51b815260206004820152601460248201527f6661696c656420746f2073656e6420457468657200000000000000000000000060448201526064016105d7565b61075e6001600160a01b038316858584613294565b60975460ff166127355760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f742070617573656400000000000000000000000060448201526064016105d7565b6097805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b60cd5460408051639d23c4c760e01b815290516000926001600160a01b031691639d23c4c79160048083019260209291908290030181865afa1580156127c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127ed91906138e2565b6001600160a01b0316141580156128e2575060cd60009054906101000a90046001600160a01b03166001600160a01b0316639d23c4c76040518163ffffffff1660e01b8152600401602060405180830381865afa158015612852573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061287691906138e2565b60405163b17721a760e01b81526001600160a01b038381166004830152919091169063b17721a790602401602060405180830381865afa1580156128be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128e29190613837565b6120455760405162461bcd60e51b815260206004820152601260248201527f696e76616c696420636f6c6c656374696f6e000000000000000000000000000060448201526064016105d7565b6001600160a01b0381161580612aa2575060cd5460408051639d23c4c760e01b815290516000926001600160a01b031691639d23c4c79160048083019260209291908290030181865afa158015612989573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129ad91906138e2565b6001600160a01b031614158015612aa2575060cd60009054906101000a90046001600160a01b03166001600160a01b0316639d23c4c76040518163ffffffff1660e01b8152600401602060405180830381865afa158015612a12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a3691906138e2565b6040516314d1e48160e01b81526001600160a01b03838116600483015291909116906314d1e48190602401602060405180830381865afa158015612a7e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612aa29190613837565b6120455760405162461bcd60e51b815260206004820152601160248201527f696e76616c69642070617920746f6b656e00000000000000000000000000000060448201526064016105d7565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60975460ff1615612b865760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016105d7565b6097805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586127623390565b6001600160a01b03808516600090815260c9602090815260408083208784528252808320858516845282528083208151608081018352815480825260018301549096169381019390935260028101549183018290526003015460608301529092612c24916137ca565b905060006103e860cc5483612c3991906137ca565b612c4391906137e9565b90506001600160a01b038516612ca257813414612ca25760405162461bcd60e51b815260206004820152601960248201527f696e73756666696369656e7420457468657220746f206275790000000000000060448201526064016105d7565b60cb54612cbb9033906001600160a01b031687846125c5565b612ccb338587610956858761380b565b6040516301ffc9a760e01b81526380ac58cd60e01b60048201526001600160a01b038816906301ffc9a790602401602060405180830381865afa158015612d16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d3a9190613837565b15612dac57604051632142170760e11b81526001600160a01b038581166004830152336024830152604482018890528816906342842e0e90606401600060405180830381600087803b158015612d8f57600080fd5b505af1158015612da3573d6000803e3d6000fd5b50505050612e1e565b825160408051602081018252600081529051637921219560e11b81526001600160a01b038a169263f242432a92612deb92899233928d926004016138aa565b600060405180830381600087803b158015612e0557600080fd5b505af1158015612e19573d6000803e3d6000fd5b505050505b6001600160a01b03878116600081815260c9602090815260408083208b845282528083208986168085529083528184208481556001810180546001600160a01b0319169055600281018590556003019390935587518882015182518d815293840191909152948a168282015260608201949094529251919233927f33288df29d0f4a78de0aab5956626ed28d0abeb944e8f0d78dd1031efb53941f9181900360800190a450505050505050565b6001600160a01b03808416600090815260c9602090815260408083208684528252808320858516845282529182902082516080810184528154808252600183015490951692810192909252600281015492820192909252600390910154606082015290612f3d9085908590859061236c565b6001600160a01b03848116600081815260c96020908152604080832088845282528083209487168084529482528083208381556001810180546001600160a01b0319169055600281018490556003019290925590518681529192917f9ba1a3cb55ce8d63d072a886f94d2a744f50cddf82128e897d0661f5ec623158910160405180910390a350505050565b600054610100900460ff1680612fe2575060005460ff16155b6130455760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016105d7565b600054610100900460ff16158015612204576000805461ffff19166101011790558015612045576000805461ff001916905550565b600054610100900460ff1680613093575060005460ff16155b6130f65760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016105d7565b600054610100900460ff16158015613118576000805461ffff19166101011790555b61220433612aee565b600054610100900460ff168061313a575060005460ff16155b61319d5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016105d7565b600054610100900460ff161580156131bf576000805461ffff19166101011790555b60016065558015612045576000805461ff001916905550565b600054610100900460ff16806131f1575060005460ff16155b6132545760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016105d7565b600054610100900460ff16158015613276576000805461ffff19166101011790555b6097805460ff191690558015612045576000805461ff001916905550565b604080516001600160a01b038581166024830152848116604483015260648083018590528351808403909101815260849092018352602080830180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b17905283518085019094528084527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65649084015261075e928792916000916133419185169084906133d6565b8051909150156133d1578080602001905181019061335f9190613837565b6133d15760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016105d7565b505050565b60606133e584846000856133ef565b90505b9392505050565b6060824710156134675760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016105d7565b843b6134b55760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016105d7565b600080866001600160a01b031685876040516134d1919061397e565b60006040518083038185875af1925050503d806000811461350e576040519150601f19603f3d011682016040523d82523d6000602084013e613513565b606091505b509150915061352382828661352e565b979650505050505050565b6060831561353d5750816133e8565b82511561354d5782518084602001fd5b8160405162461bcd60e51b81526004016105d7919061399a565b6001600160a01b038116811461204557600080fd5b6000806040838503121561358f57600080fd5b823561359a81613567565b946020939093013593505050565b6000806000606084860312156135bd57600080fd5b83356135c881613567565b925060208401356135d881613567565b929592945050506040919091013590565b6000806000606084860312156135fe57600080fd5b833561360981613567565b925060208401359150604084013561362081613567565b809150509250925092565b60008060008060008060c0878903121561364457600080fd5b863561364f81613567565b95506020870135945060408701359350606087013561366d81613567565b9598949750929560808101359460a0909101359350915050565b60008060008060008060c087890312156136a057600080fd5b86356136ab81613567565b95506020870135945060408701356136c281613567565b959894975094956060810135955060808101359460a0909101359350915050565b600080600080608085870312156136f957600080fd5b843561370481613567565b935060208501359250604085013561371b81613567565b9150606085013561372b81613567565b939692955090935050565b60006020828403121561374857600080fd5b5035919050565b6000806000806080858703121561376557600080fd5b843561377081613567565b935060208501359250604085013561378781613567565b9396929550929360600135925050565b6000602082840312156137a957600080fd5b81356133e881613567565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156137e4576137e46137b4565b500290565b60008261380657634e487b7160e01b600052601260045260246000fd5b500490565b60008282101561381d5761381d6137b4565b500390565b8051801515811461383257600080fd5b919050565b60006020828403121561384957600080fd5b6133e882613822565b60005b8381101561386d578181015183820152602001613855565b8381111561075e5750506000910152565b60008151808452613896816020860160208601613852565b601f01601f19169290920160200192915050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a0608083015261352360a083018461387e565b6000602082840312156138f457600080fd5b81516133e881613567565b60006020828403121561391157600080fd5b5051919050565b60008060008060008060c0878903121561393157600080fd5b865161393c81613567565b602088015190965061394d81613567565b8095505060408701519350606087015192506080870151915061397260a08801613822565b90509295509295509295565b60008251613990818460208701613852565b9190910192915050565b6020815260006133e8602083018461387e56fea26469706673582212208171ef3a2e863330f60984b7b9dda56da0eada83a471a384da45ef76c02e89b864736f6c634300080b0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "acceptOffer(address,uint256,address)": {
        "params": {
          "_creator": "Offer creator address",
          "_nftAddress": "Addres of NFT contract",
          "_tokenId": "Token ID of NFT"
        }
      },
      "buyItem(address,uint256,address,address)": {
        "params": {
          "_nftAddress": "Address of NFT contract",
          "_owner": "NFT owner address",
          "_payToken": "Payment token address",
          "_tokenId": "Token ID of NFT"
        }
      },
      "cancelListing(address,uint256)": {
        "params": {
          "_nftAddress": "Addres of NFT contract",
          "_tokenId": "Token ID of NFT"
        }
      },
      "cancelOffer(address,uint256)": {
        "params": {
          "_nftAddress": "Addres of NFT contract",
          "_tokenId": "Token ID of NFT"
        }
      },
      "createOffer(address,uint256,address,uint256,uint256,uint256)": {
        "params": {
          "_deadline": "Offer expiration",
          "_nftAddress": "Addres of NFT contract",
          "_payToken": "Payment tokne addres",
          "_pricePerItem": "Price per item",
          "_quantity": "Quantity of items",
          "_tokenId": "Token ID of NFT"
        }
      },
      "listItem(address,uint256,uint256,address,uint256,uint256)": {
        "params": {
          "_nftAddress": "Address of NFT contract",
          "_payToken": "Paying token",
          "_pricePerItem": "sale price for each iteam",
          "_quantity": "token amount to list (needed for ERC-1155 NFTs, set as 1 for ERC-721)",
          "_startAt": "scheduling for a future sale",
          "_tokenId": "Token ID of NFT"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "pause()": {
        "details": "Only owner"
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "unpause()": {
        "details": "Only owner"
      },
      "updateListing(address,uint256,address,uint256)": {
        "params": {
          "_newPrice": "New sale price for each item",
          "_nftAddress": "Address of NFT contract",
          "_payToken": "Payment token address",
          "_tokenId": "Token ID of NFT"
        }
      },
      "updatePlatformFee(uint256)": {
        "details": "Only owner",
        "params": {
          "_platformFee": "new platform fee"
        }
      },
      "updatePlatformFeeRecipient(address)": {
        "details": "Only owner",
        "params": {
          "_feeRecipient": "new platform fee recipient"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "events": {
      "ItemListed(address,address,uint256,uint256,address,uint256,uint256)": {
        "notice": "Events for the contract"
      }
    },
    "kind": "user",
    "methods": {
      "acceptOffer(address,uint256,address)": {
        "notice": "Method for accepting the offer"
      },
      "addressRegistry()": {
        "notice": "AddressRegistry"
      },
      "buyItem(address,uint256,address,address)": {
        "notice": "Method for buying listed NFT"
      },
      "cancelListing(address,uint256)": {
        "notice": "Method for canceling listed NFT"
      },
      "cancelOffer(address,uint256)": {
        "notice": "Method for canceling the offer"
      },
      "createOffer(address,uint256,address,uint256,uint256,uint256)": {
        "notice": "Method of offering item"
      },
      "feeRecipient()": {
        "notice": "Platform fee recipient"
      },
      "listItem(address,uint256,uint256,address,uint256,uint256)": {
        "notice": "Method for listing NFT"
      },
      "listings(address,uint256,address)": {
        "notice": "NFT Address -> Token ID -> Owner -> Listing"
      },
      "offers(address,uint256,address)": {
        "notice": "NFT Address -> Token ID -> Offerer -> Offer"
      },
      "pause()": {
        "notice": "Pause Marketplace"
      },
      "platformFee()": {
        "notice": "Platform fee"
      },
      "unpause()": {
        "notice": "Resume Marketplace"
      },
      "updateListing(address,uint256,address,uint256)": {
        "notice": "Method for updating listed NFT"
      },
      "updatePlatformFee(uint256)": {
        "notice": "Update platform fee"
      },
      "updatePlatformFeeRecipient(address)": {
        "notice": "Update platform fee address"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 130,
        "contract": "contracts/OPGamesMarketplace.sol:OPGamesMarketplace",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 133,
        "contract": "contracts/OPGamesMarketplace.sol:OPGamesMarketplace",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 1167,
        "contract": "contracts/OPGamesMarketplace.sol:OPGamesMarketplace",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 10,
        "contract": "contracts/OPGamesMarketplace.sol:OPGamesMarketplace",
        "label": "_owner",
        "offset": 0,
        "slot": "51",
        "type": "t_address"
      },
      {
        "astId": 123,
        "contract": "contracts/OPGamesMarketplace.sol:OPGamesMarketplace",
        "label": "__gap",
        "offset": 0,
        "slot": "52",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 297,
        "contract": "contracts/OPGamesMarketplace.sol:OPGamesMarketplace",
        "label": "_status",
        "offset": 0,
        "slot": "101",
        "type": "t_uint256"
      },
      {
        "astId": 340,
        "contract": "contracts/OPGamesMarketplace.sol:OPGamesMarketplace",
        "label": "__gap",
        "offset": 0,
        "slot": "102",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 191,
        "contract": "contracts/OPGamesMarketplace.sol:OPGamesMarketplace",
        "label": "_paused",
        "offset": 0,
        "slot": "151",
        "type": "t_bool"
      },
      {
        "astId": 282,
        "contract": "contracts/OPGamesMarketplace.sol:OPGamesMarketplace",
        "label": "__gap",
        "offset": 0,
        "slot": "152",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 2545,
        "contract": "contracts/OPGamesMarketplace.sol:OPGamesMarketplace",
        "label": "listings",
        "offset": 0,
        "slot": "201",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_struct(Listing)2519_storage)))"
      },
      {
        "astId": 2555,
        "contract": "contracts/OPGamesMarketplace.sol:OPGamesMarketplace",
        "label": "offers",
        "offset": 0,
        "slot": "202",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_struct(Offer)2529_storage)))"
      },
      {
        "astId": 2558,
        "contract": "contracts/OPGamesMarketplace.sol:OPGamesMarketplace",
        "label": "feeRecipient",
        "offset": 0,
        "slot": "203",
        "type": "t_address_payable"
      },
      {
        "astId": 2561,
        "contract": "contracts/OPGamesMarketplace.sol:OPGamesMarketplace",
        "label": "platformFee",
        "offset": 0,
        "slot": "204",
        "type": "t_uint256"
      },
      {
        "astId": 2565,
        "contract": "contracts/OPGamesMarketplace.sol:OPGamesMarketplace",
        "label": "addressRegistry",
        "offset": 0,
        "slot": "205",
        "type": "t_contract(IAddressRegistry)4072"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)49_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568"
      },
      "t_array(t_uint256)50_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IAddressRegistry)4072": {
        "encoding": "inplace",
        "label": "contract IAddressRegistry",
        "numberOfBytes": "20"
      },
      "t_contract(IERC20Upgradeable)541": {
        "encoding": "inplace",
        "label": "contract IERC20Upgradeable",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_struct(Listing)2519_storage)))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => mapping(address => struct OPGamesMarketplace.Listing)))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_mapping(t_address,t_struct(Listing)2519_storage))"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_struct(Offer)2529_storage)))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => mapping(address => struct OPGamesMarketplace.Offer)))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_mapping(t_address,t_struct(Offer)2529_storage))"
      },
      "t_mapping(t_address,t_struct(Listing)2519_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct OPGamesMarketplace.Listing)",
        "numberOfBytes": "32",
        "value": "t_struct(Listing)2519_storage"
      },
      "t_mapping(t_address,t_struct(Offer)2529_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct OPGamesMarketplace.Offer)",
        "numberOfBytes": "32",
        "value": "t_struct(Offer)2529_storage"
      },
      "t_mapping(t_uint256,t_mapping(t_address,t_struct(Listing)2519_storage))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(address => struct OPGamesMarketplace.Listing))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_struct(Listing)2519_storage)"
      },
      "t_mapping(t_uint256,t_mapping(t_address,t_struct(Offer)2529_storage))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(address => struct OPGamesMarketplace.Offer))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_struct(Offer)2529_storage)"
      },
      "t_struct(Listing)2519_storage": {
        "encoding": "inplace",
        "label": "struct OPGamesMarketplace.Listing",
        "members": [
          {
            "astId": 2512,
            "contract": "contracts/OPGamesMarketplace.sol:OPGamesMarketplace",
            "label": "quantity",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 2514,
            "contract": "contracts/OPGamesMarketplace.sol:OPGamesMarketplace",
            "label": "payToken",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 2516,
            "contract": "contracts/OPGamesMarketplace.sol:OPGamesMarketplace",
            "label": "pricePerItem",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 2518,
            "contract": "contracts/OPGamesMarketplace.sol:OPGamesMarketplace",
            "label": "startAt",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_struct(Offer)2529_storage": {
        "encoding": "inplace",
        "label": "struct OPGamesMarketplace.Offer",
        "members": [
          {
            "astId": 2522,
            "contract": "contracts/OPGamesMarketplace.sol:OPGamesMarketplace",
            "label": "payToken",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IERC20Upgradeable)541"
          },
          {
            "astId": 2524,
            "contract": "contracts/OPGamesMarketplace.sol:OPGamesMarketplace",
            "label": "quantity",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 2526,
            "contract": "contracts/OPGamesMarketplace.sol:OPGamesMarketplace",
            "label": "pricePerItem",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 2528,
            "contract": "contracts/OPGamesMarketplace.sol:OPGamesMarketplace",
            "label": "deadline",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}