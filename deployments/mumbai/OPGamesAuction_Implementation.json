{
  "address": "0xb318793AE2fEAC0118a3b47E9185A5DD84b7147B",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "AuctionCancelled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "payToken",
          "type": "address"
        }
      ],
      "name": "AuctionCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "winner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "payToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "winningBid",
          "type": "uint256"
        }
      ],
      "name": "AuctionResulted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "bidder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bid",
          "type": "uint256"
        }
      ],
      "name": "BidPlaced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "bidder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bid",
          "type": "uint256"
        }
      ],
      "name": "BidRefunded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "bidder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bid",
          "type": "uint256"
        }
      ],
      "name": "BidWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "addressRegistry",
      "outputs": [
        {
          "internalType": "contract IAddressRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "auctions",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "payToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "minBid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "reservePrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "resulted",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "cancelAuction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_payToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_reservePrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_startTimestamp",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_minBidReserve",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "_endTimestamp",
          "type": "uint256"
        }
      ],
      "name": "createAuction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeRecipient",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "highestBids",
      "outputs": [
        {
          "internalType": "address",
          "name": "bidder",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "bid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastBidTime",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addressRegistry",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "_feeRecipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_platformFee",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minBidIncrement",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_bidAmount",
          "type": "uint256"
        }
      ],
      "name": "placeBid",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "platformFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "resultAuction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "withdrawBid",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x58a789b8c571c7bf43a377bc9f58f127234f0bb7cf43a47ff66adce9ae912a89",
  "receipt": {
    "to": null,
    "from": "0x4039027048c08DCEdE2d912012308CE4F0F2bC68",
    "contractAddress": "0xb318793AE2fEAC0118a3b47E9185A5DD84b7147B",
    "transactionIndex": 2,
    "gasUsed": "2677124",
    "logsBloom": "0x
    "blockHash": "0x68319dcc7ef8e890771820af4fbb04054a2fd172144754b6119812595b299f72",
    "transactionHash": "0x58a789b8c571c7bf43a377bc9f58f127234f0bb7cf43a47ff66adce9ae912a89",
    "logs": [
      {
        "transactionIndex": 2,
        "blockNumber": 27831054,
        "transactionHash": "0x58a789b8c571c7bf43a377bc9f58f127234f0bb7cf43a47ff66adce9ae912a89",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x0000000000000000000000004039027048c08dcede2d912012308ce4f0f2bc68",
          "0x000000000000000000000000be188d6641e8b680743a4815dfa0f6208038960f"
        ],
        "data": "0x000000000000000000000000000000000000000000000000017c7134284f73e000000000000000000000000000000000000000000000000035ce5503878bc6f10000000000000000000000000000000000000000000024be1ef1f55df11c65550000000000000000000000000000000000000000000000003451e3cf5f3c53110000000000000000000000000000000000000000000024be206e6692196bd935",
        "logIndex": 3,
        "blockHash": "0x68319dcc7ef8e890771820af4fbb04054a2fd172144754b6119812595b299f72"
      }
    ],
    "blockNumber": 27831054,
    "cumulativeGasUsed": "2750443",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "15b3947fd486810d5b6775035b1b066d",
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"AuctionCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"payToken\",\"type\":\"address\"}],\"name\":\"AuctionCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"payToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"winningBid\",\"type\":\"uint256\"}],\"name\":\"AuctionResulted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bid\",\"type\":\"uint256\"}],\"name\":\"BidPlaced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bid\",\"type\":\"uint256\"}],\"name\":\"BidRefunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bid\",\"type\":\"uint256\"}],\"name\":\"BidWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"addressRegistry\",\"outputs\":[{\"internalType\":\"contract IAddressRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"auctions\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"payToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minBid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reservePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"resulted\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"cancelAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_payToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_reservePrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_minBidReserve\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_endTimestamp\",\"type\":\"uint256\"}],\"name\":\"createAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeRecipient\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"highestBids\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"bid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastBidTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addressRegistry\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_feeRecipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_platformFee\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minBidIncrement\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_bidAmount\",\"type\":\"uint256\"}],\"name\":\"placeBid\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"platformFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"resultAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"withdrawBid\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"cancelAuction(address,uint256)\":{\"details\":\"Only item owner\",\"params\":{\"_nftAddress\":\"ERC 721 Address\",\"_tokenId\":\"Token ID of the NFT being auctioned\"}},\"createAuction(address,uint256,address,uint256,uint256,bool,uint256)\":{\"details\":\"Only the owner of item can create an auction and must have approved the contractIn addition to owning the item, the sender also has to have the MINTER role.End time for the auction must be in the future.\",\"params\":{\"_endTimestamp\":\"Unix epoch in seconds for the auction end time.\",\"_minBidReserve\":\"Whether the reserve price should be applied or not\",\"_nftAddress\":\"ERC 721 Address\",\"_payToken\":\"Paying token\",\"_reservePrice\":\"Item cannot be sold for less than this or minBidIncrement, whichever is higher\",\"_startTimestamp\":\"Unix epoch in seconds for the auction start time\",\"_tokenId\":\"Token ID of the item being auctioned\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause()\":{\"details\":\"Only owner\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"placeBid(address,uint256,uint256)\":{\"details\":\"Only callable when the auction is openBids from smart contracts are prohibited to prevent griefing with always reverting receiver\",\"params\":{\"_bidAmount\":\"Bid amount\",\"_nftAddress\":\"ERC 721 Address\",\"_tokenId\":\"Token ID of the item being auctioned\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"resultAuction(address,uint256)\":{\"details\":\"Only admin or smart contractAuction can only be resulted if there has been a bidder and reserve met.If there have been no bids, the auction needs to be cancelled instead using `cancelAuction()`\",\"params\":{\"_nftAddress\":\"ERC 721 Address\",\"_tokenId\":\"Token ID of the item being auctioned\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause()\":{\"details\":\"Only owner\"},\"withdrawBid(address,uint256)\":{\"details\":\"Only callable by the existing top bidder\",\"params\":{\"_nftAddress\":\"ERC 721 Address\",\"_tokenId\":\"Token ID of the item being auctioned\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addressRegistry()\":{\"notice\":\"AddressRegistry\"},\"auctions(address,uint256)\":{\"notice\":\"ERC721 Address -> Token ID -> Auction Parameters\"},\"cancelAuction(address,uint256)\":{\"notice\":\"Cancels and inflight and un-resulted auctions, returning the funds to the top bidder if found\"},\"createAuction(address,uint256,address,uint256,uint256,bool,uint256)\":{\"notice\":\"Creates a new auction for a given item\"},\"feeRecipient()\":{\"notice\":\"Platform fee recipient\"},\"highestBids(address,uint256)\":{\"notice\":\"ERC721 Address -> Token ID -> highest bidder info (if a bid has been received)\"},\"minBidIncrement()\":{\"notice\":\"globally and across all auctions, the amount by which a bid has to increase\"},\"pause()\":{\"notice\":\"Pause Auction\"},\"placeBid(address,uint256,uint256)\":{\"notice\":\"Places a new bid, out bidding the existing bidder if found and criteria is reached\"},\"platformFee()\":{\"notice\":\"Platform fee\"},\"resultAuction(address,uint256)\":{\"notice\":\"Closes a finished auction and rewards the highest bidder\"},\"unpause()\":{\"notice\":\"Resume Auction\"},\"withdrawBid(address,uint256)\":{\"notice\":\"Allows the hightest bidder to withdraw the bid (after 12 hours post auction's end)\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OPGamesAuction.sol\":\"OPGamesAuction\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal initializer {\\n        __Context_init_unchained();\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal initializer {\\n        _setOwner(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _setOwner(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x35b09b69aca3bc2633da8f47382a81ecf367efe57167a2114f60f9ec81988afa\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     */\\n    bool private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Modifier to protect an initializer function from being invoked twice.\\n     */\\n    modifier initializer() {\\n        require(_initializing || !_initialized, \\\"Initializable: contract is already initialized\\\");\\n\\n        bool isTopLevelCall = !_initializing;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n            _initialized = true;\\n        }\\n\\n        _;\\n\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x8b2abd85d0ece7e866e100e9d47ca9cbec93c87cf71a8d267b2b93eb81f7d5e9\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    function __Pausable_init() internal initializer {\\n        __Context_init_unchained();\\n        __Pausable_init_unchained();\\n    }\\n\\n    function __Pausable_init_unchained() internal initializer {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x742c0fbab73bf595ca40025f6e81cb48dbd5e133950717f7befd062a925c0148\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuardUpgradeable is Initializable {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    function __ReentrancyGuard_init() internal initializer {\\n        __ReentrancyGuard_init_unchained();\\n    }\\n\\n    function __ReentrancyGuard_init_unchained() internal initializer {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and make it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x89fa60d14355f7ae06af11e28fce2bb90c5c6186645d681a30e1b36234a4c210\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20Upgradeable {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xf449ca0a763d4b1b4462cf8706857074492f324020a2b9d099181b5383055ad3\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20Upgradeable.sol\\\";\\nimport \\\"../../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20Upgradeable {\\n    using AddressUpgradeable for address;\\n\\n    function safeTransfer(\\n        IERC20Upgradeable token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20Upgradeable token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20Upgradeable token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20Upgradeable token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20Upgradeable token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20Upgradeable token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc7d7fe7d5ed5068742927e37b400591153dbe8526cd942cfcf5dbb971ba5e8e2\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165Upgradeable.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721Upgradeable is IERC165Upgradeable {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0xfbb3ca7272af58dc245a20e91a1f68481ee04706fa3fe46d184000efc21f4bad\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) private pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x37c56d5e4a1c4c65ad0dcc6af28442c5d35c6ca07d9ad6e966e07dceb97e6c8d\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal initializer {\\n        __Context_init_unchained();\\n    }\\n\\n    function __Context_init_unchained() internal initializer {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x828a6fb02c79a63dc5867427f355c0a9c65b4359fecadae73883154da550f6f8\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165Upgradeable {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x1c4860acd323e34a67b3e97faab9aaa55fe8e92b1dcf08b5f47f3468d58ce75c\",\"license\":\"MIT\"},\"contracts/OPGamesAuction.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.11;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\\\";\\n\\nimport \\\"./interfaces/IAddressRegistry.sol\\\";\\nimport \\\"./interfaces/ITokenRegistry.sol\\\";\\n\\ncontract OPGamesAuction is Initializable, OwnableUpgradeable, ReentrancyGuardUpgradeable, PausableUpgradeable {\\n  using SafeERC20Upgradeable for IERC20Upgradeable;\\n\\n  event AuctionCreated(address indexed nftAddress, uint256 indexed tokenId, address payToken);\\n  event BidPlaced(address indexed nftAddress, uint256 indexed tokenId, address indexed bidder, uint256 bid);\\n  event BidWithdrawn(address indexed nftAddress, uint256 indexed tokenId, address indexed bidder, uint256 bid);\\n  event BidRefunded(address indexed nftAddress, uint256 indexed tokenId, address indexed bidder, uint256 bid);\\n  event AuctionResulted(\\n    address oldOwner,\\n    address indexed nftAddress,\\n    uint256 indexed tokenId,\\n    address indexed winner,\\n    address payToken,\\n    uint256 winningBid\\n  );\\n  event AuctionCancelled(address indexed nftAddress, uint256 indexed tokenId);\\n\\n  /// @notice Parameters of an auction\\n  struct Auction {\\n    address owner;\\n    address payToken;\\n    uint256 minBid;\\n    uint256 reservePrice;\\n    uint256 startTime;\\n    uint256 endTime;\\n    bool resulted;\\n  }\\n\\n  /// @notice Information about the sender that placed a bit on an auction\\n  struct HighestBid {\\n    address bidder;\\n    uint256 bid;\\n    uint256 lastBidTime;\\n  }\\n\\n  /// @notice ERC721 Address -> Token ID -> Auction Parameters\\n  mapping(address => mapping(uint256 => Auction)) public auctions;\\n\\n  /// @notice ERC721 Address -> Token ID -> highest bidder info (if a bid has been received)\\n  mapping(address => mapping(uint256 => HighestBid)) public highestBids;\\n\\n  /// @notice globally and across all auctions, the amount by which a bid has to increase\\n  uint256 public minBidIncrement = 1;\\n\\n  /// @notice Platform fee recipient\\n  address payable public feeRecipient;\\n\\n  /// @notice Platform fee\\n  uint256 public platformFee;\\n\\n  /// @notice AddressRegistry\\n  IAddressRegistry public addressRegistry;\\n\\n  receive() external payable {}\\n\\n  function initialize(\\n    address _addressRegistry,\\n    address payable _feeRecipient,\\n    uint256 _platformFee\\n  ) external initializer {\\n    __Ownable_init();\\n    __ReentrancyGuard_init();\\n    __Pausable_init();\\n\\n    require(_addressRegistry != address(0), \\\"unexpected address registry\\\");\\n    require(_feeRecipient != address(0), \\\"unexpected fee recipient\\\");\\n    require(_platformFee < 100_0, \\\"platform fee exceeded\\\");\\n\\n    addressRegistry = IAddressRegistry(_addressRegistry);\\n    feeRecipient = _feeRecipient;\\n    platformFee = _platformFee;\\n  }\\n\\n  /**\\n   * @notice Creates a new auction for a given item\\n   * @dev Only the owner of item can create an auction and must have approved the contract\\n   * @dev In addition to owning the item, the sender also has to have the MINTER role.\\n   * @dev End time for the auction must be in the future.\\n   * @param _nftAddress ERC 721 Address\\n   * @param _tokenId Token ID of the item being auctioned\\n   * @param _payToken Paying token\\n   * @param _reservePrice Item cannot be sold for less than this or minBidIncrement, whichever is higher\\n   * @param _startTimestamp Unix epoch in seconds for the auction start time\\n   * @param _minBidReserve Whether the reserve price should be applied or not\\n   * @param _endTimestamp Unix epoch in seconds for the auction end time.\\n   */\\n  function createAuction(\\n    address _nftAddress,\\n    uint256 _tokenId,\\n    address _payToken,\\n    uint256 _reservePrice,\\n    uint256 _startTimestamp,\\n    bool _minBidReserve,\\n    uint256 _endTimestamp\\n  ) external whenNotPaused {\\n    // Ensure this contract is approved to move the token\\n    require(\\n      IERC721Upgradeable(_nftAddress).ownerOf(_tokenId) == msg.sender &&\\n        IERC721Upgradeable(_nftAddress).isApprovedForAll(msg.sender, address(this)),\\n      \\\"not owner and or contract not approved\\\"\\n    );\\n\\n    _validCollection(_nftAddress);\\n    _validPayToken(_payToken);\\n\\n    _createAuction(_nftAddress, _tokenId, _payToken, _reservePrice, _startTimestamp, _minBidReserve, _endTimestamp);\\n  }\\n\\n  /**\\n   * @notice Places a new bid, out bidding the existing bidder if found and criteria is reached\\n   * @dev Only callable when the auction is open\\n   * @dev Bids from smart contracts are prohibited to prevent griefing with always reverting receiver\\n   * @param _nftAddress ERC 721 Address\\n   * @param _tokenId Token ID of the item being auctioned\\n   * @param _bidAmount Bid amount\\n   */\\n  function placeBid(\\n    address _nftAddress,\\n    uint256 _tokenId,\\n    uint256 _bidAmount\\n  ) external payable nonReentrant whenNotPaused {\\n    require(msg.sender == tx.origin, \\\"no contracts permitted\\\");\\n\\n    // Check the auction to see if this is a valid bid\\n    Auction memory auction = auctions[_nftAddress][_tokenId];\\n\\n    // Ensure auction is in flight\\n    require(_getNow() >= auction.startTime && _getNow() <= auction.endTime, \\\"bidding outside of the auction window\\\");\\n\\n    _placeBid(_nftAddress, _tokenId, _bidAmount);\\n  }\\n\\n  function _placeBid(\\n    address _nftAddress,\\n    uint256 _tokenId,\\n    uint256 _bidAmount\\n  ) internal whenNotPaused {\\n    Auction storage auction = auctions[_nftAddress][_tokenId];\\n\\n    if (auction.minBid == auction.reservePrice) {\\n      require(_bidAmount >= auction.reservePrice, \\\"bid cannot be lower than reserve price\\\");\\n    }\\n\\n    // Ensure bid adheres to outbid increment and threshold\\n    HighestBid storage highestBid = highestBids[_nftAddress][_tokenId];\\n    uint256 minBidRequired = highestBid.bid + minBidIncrement;\\n\\n    require(_bidAmount >= minBidRequired, \\\"failed to outbid highest bidder\\\");\\n    _tokenTransferFrom(msg.sender, address(this), auction.payToken, _bidAmount);\\n\\n    // Refund existing top bidder if found\\n    if (highestBid.bidder != address(0)) {\\n      _refundHighestBidder(_nftAddress, _tokenId, highestBid.bidder, highestBid.bid);\\n    }\\n\\n    // assign top bidder and bid time\\n    highestBid.bidder = msg.sender;\\n    highestBid.bid = _bidAmount;\\n    highestBid.lastBidTime = _getNow();\\n\\n    emit BidPlaced(_nftAddress, _tokenId, msg.sender, _bidAmount);\\n  }\\n\\n  /**\\n   * @notice Allows the hightest bidder to withdraw the bid (after 12 hours post auction's end)\\n   * @dev Only callable by the existing top bidder\\n   * @param _nftAddress ERC 721 Address\\n   * @param _tokenId Token ID of the item being auctioned\\n   */\\n  function withdrawBid(address _nftAddress, uint256 _tokenId) external nonReentrant {\\n    HighestBid storage highestBid = highestBids[_nftAddress][_tokenId];\\n\\n    // Ensure highest bidder is the caller\\n    require(highestBid.bidder == msg.sender, \\\"you are not the highest bidder\\\");\\n\\n    uint256 _endTime = auctions[_nftAddress][_tokenId].endTime;\\n\\n    require(\\n      _getNow() > _endTime && (_getNow() - _endTime >= 43200),\\n      \\\"can withdraw only after 12 hours (after auction ended)\\\"\\n    );\\n\\n    uint256 previousBid = highestBid.bid;\\n\\n    // Clean up the existing top bid\\n    delete highestBids[_nftAddress][_tokenId];\\n\\n    // Refund the top bidder\\n    _refundHighestBidder(_nftAddress, _tokenId, msg.sender, previousBid);\\n\\n    emit BidWithdrawn(_nftAddress, _tokenId, msg.sender, previousBid);\\n  }\\n\\n  /**\\n   * @notice Closes a finished auction and rewards the highest bidder\\n   * @dev Only admin or smart contract\\n   * @dev Auction can only be resulted if there has been a bidder and reserve met.\\n   * @dev If there have been no bids, the auction needs to be cancelled instead using `cancelAuction()`\\n   * @param _nftAddress ERC 721 Address\\n   * @param _tokenId Token ID of the item being auctioned\\n   */\\n  function resultAuction(address _nftAddress, uint256 _tokenId) external nonReentrant whenNotPaused {\\n    // Check the auction to see if it can be resulted\\n    Auction storage auction = auctions[_nftAddress][_tokenId];\\n\\n    require(\\n      IERC721Upgradeable(_nftAddress).ownerOf(_tokenId) == msg.sender && msg.sender == auction.owner,\\n      \\\"sender must be item owner\\\"\\n    );\\n\\n    // Check the auction real\\n    require(auction.endTime > 0, \\\"no auction exists\\\");\\n\\n    // Check the auction has ended\\n    require(_getNow() > auction.endTime, \\\"auction not ended\\\");\\n\\n    // Ensure auction not already resulted\\n    require(!auction.resulted, \\\"auction already resulted\\\");\\n\\n    // Get info on who the highest bidder is\\n    HighestBid storage highestBid = highestBids[_nftAddress][_tokenId];\\n    address winner = highestBid.bidder;\\n    uint256 winningBid = highestBid.bid;\\n\\n    // Ensure there is a winner\\n    require(winner != address(0), \\\"no open bids\\\");\\n    require(winningBid >= auction.reservePrice, \\\"highest bid is below reservePrice\\\");\\n\\n    // Ensure this contract is approved to move the token\\n    require(IERC721Upgradeable(_nftAddress).isApprovedForAll(msg.sender, address(this)), \\\"auction not approved\\\");\\n\\n    // Result the auction\\n    auction.resulted = true;\\n\\n    // Clean up the highest bid\\n    delete highestBids[_nftAddress][_tokenId];\\n\\n    uint256 feeAmount = (winningBid * platformFee) / 100_0;\\n\\n    IERC20Upgradeable payToken = IERC20Upgradeable(auction.payToken);\\n    payToken.safeTransfer(feeRecipient, feeAmount);\\n    payToken.safeTransfer(auction.owner, winningBid - feeAmount);\\n\\n    // Transfer the token to the winner\\n    IERC721Upgradeable(_nftAddress).safeTransferFrom(\\n      IERC721Upgradeable(_nftAddress).ownerOf(_tokenId),\\n      winner,\\n      _tokenId\\n    );\\n\\n    // Remove auction\\n    delete auctions[_nftAddress][_tokenId];\\n\\n    emit AuctionResulted(msg.sender, _nftAddress, _tokenId, winner, auction.payToken, winningBid);\\n  }\\n\\n  /**\\n   * @notice Private method doing the heavy lifting of creating an auction\\n   * @param _nftAddress ERC 721 Address\\n   * @param _tokenId Token ID of the NFT being auctioned\\n   * @param _payToken Paying token\\n   * @param _reservePrice Item cannot be sold for less than this or minBidIncrement, whichever is higher\\n   * @param _startTimestamp Unix epoch in seconds for the auction start time\\n   * @param _endTimestamp Unix epoch in seconds for the auction end time.\\n   */\\n  function _createAuction(\\n    address _nftAddress,\\n    uint256 _tokenId,\\n    address _payToken,\\n    uint256 _reservePrice,\\n    uint256 _startTimestamp,\\n    bool minBidReserve,\\n    uint256 _endTimestamp\\n  ) private {\\n    // Ensure a token cannot be re-listed if previously successfully sold\\n    require(auctions[_nftAddress][_tokenId].endTime == 0, \\\"auction already started\\\");\\n\\n    // Check end time not before start time and that end is in the future\\n    require(_endTimestamp >= _startTimestamp + 300, \\\"end time must be greater than start (by 5 minutes)\\\");\\n\\n    require(_startTimestamp > _getNow(), \\\"invalid start time\\\");\\n\\n    uint256 minimumBid = 0;\\n\\n    if (minBidReserve) {\\n      minimumBid = _reservePrice;\\n    }\\n\\n    // Setup the auction\\n    auctions[_nftAddress][_tokenId] = Auction({\\n      owner: msg.sender,\\n      payToken: _payToken,\\n      minBid: minimumBid,\\n      reservePrice: _reservePrice,\\n      startTime: _startTimestamp,\\n      endTime: _endTimestamp,\\n      resulted: false\\n    });\\n\\n    emit AuctionCreated(_nftAddress, _tokenId, _payToken);\\n  }\\n\\n  /**\\n   * @notice Cancels and inflight and un-resulted auctions, returning the funds to the top bidder if found\\n   * @dev Only item owner\\n   * @param _nftAddress ERC 721 Address\\n   * @param _tokenId Token ID of the NFT being auctioned\\n   */\\n  function cancelAuction(address _nftAddress, uint256 _tokenId) external nonReentrant {\\n    // Check valid and not resulted\\n    Auction memory auction = auctions[_nftAddress][_tokenId];\\n\\n    require(\\n      IERC721Upgradeable(_nftAddress).ownerOf(_tokenId) == msg.sender && msg.sender == auction.owner,\\n      \\\"sender must be owner\\\"\\n    );\\n\\n    // Check auction is real\\n    require(auction.endTime > 0, \\\"no auction exists\\\");\\n\\n    // Check auction not already resulted\\n    require(!auction.resulted, \\\"auction already resulted\\\");\\n\\n    _cancelAuction(_nftAddress, _tokenId);\\n  }\\n\\n  function _cancelAuction(address _nftAddress, uint256 _tokenId) private {\\n    // refund existing top bidder if found\\n    HighestBid storage highestBid = highestBids[_nftAddress][_tokenId];\\n    if (highestBid.bidder != address(0)) {\\n      _refundHighestBidder(_nftAddress, _tokenId, highestBid.bidder, highestBid.bid);\\n\\n      // Clear up highest bid\\n      delete highestBids[_nftAddress][_tokenId];\\n    }\\n\\n    // Remove auction and top bidder\\n    delete auctions[_nftAddress][_tokenId];\\n\\n    emit AuctionCancelled(_nftAddress, _tokenId);\\n  }\\n\\n  /**\\n   * @notice Used for sending back escrowed funds from a previous bid\\n   * @param _currentHighestBidder Address of the last highest bidder\\n   * @param _currentHighestBid Ether or Mona amount in WEI that the bidder sent when placing their bid\\n   */\\n  function _refundHighestBidder(\\n    address _nftAddress,\\n    uint256 _tokenId,\\n    address _currentHighestBidder,\\n    uint256 _currentHighestBid\\n  ) private {\\n    Auction memory auction = auctions[_nftAddress][_tokenId];\\n\\n    _tokenTransferFrom(address(this), _currentHighestBidder, auction.payToken, _currentHighestBid);\\n\\n    emit BidRefunded(_nftAddress, _tokenId, _currentHighestBidder, _currentHighestBid);\\n  }\\n\\n  /**\\n   * @notice Validate the payment token\\n   * @dev Zero address means the native token\\n   * @param _payToken Payment token address\\n   */\\n  function _validPayToken(address _payToken) internal view {\\n    require(\\n      _payToken == address(0) ||\\n        (addressRegistry.tokenRegistry() != address(0) &&\\n          ITokenRegistry(addressRegistry.tokenRegistry()).enabledPayToken(_payToken)),\\n      \\\"invalid pay token\\\"\\n    );\\n  }\\n\\n  /**\\n   * @notice Validate the collection\\n   * @param _nftAddress Collection address\\n   */\\n  function _validCollection(address _nftAddress) internal view {\\n    require(\\n      (addressRegistry.tokenRegistry() != address(0) &&\\n        ITokenRegistry(addressRegistry.tokenRegistry()).enabledCollection(_nftAddress)),\\n      \\\"invalid collection\\\"\\n    );\\n  }\\n\\n  /**\\n   * @notice Transfer tokens\\n   * @dev If the _payToken address is zero, it means the native token\\n   * @param _from Sender address\\n   * @param _to Receiver address\\n   * @param _payToken Payment token address\\n   * @param _amount Payment token amount\\n   */\\n  function _tokenTransferFrom(\\n    address _from,\\n    address _to,\\n    address _payToken,\\n    uint256 _amount\\n  ) private {\\n    if (_payToken == address(0)) {\\n      require(_from == address(this), \\\"invalid Ether sender\\\");\\n\\n      (bool sent, ) = payable(_to).call{value: _amount}(\\\"\\\");\\n      require(sent, \\\"failed to send Ether\\\");\\n    } else {\\n      IERC20Upgradeable(_payToken).safeTransferFrom(_from, _to, _amount);\\n    }\\n  }\\n\\n  function _getNow() internal view virtual returns (uint256) {\\n    return block.timestamp;\\n  }\\n\\n  /**\\n   * @notice Pause Auction\\n   * @dev Only owner\\n   */\\n  function pause() external onlyOwner {\\n    _pause();\\n  }\\n\\n  /**\\n   * @notice Resume Auction\\n   * @dev Only owner\\n   */\\n  function unpause() external onlyOwner {\\n    _unpause();\\n  }\\n}\\n\",\"keccak256\":\"0xeba339027ed94aab355665da50175045e931812058fd27d8c632accf99b11428\",\"license\":\"MIT\"},\"contracts/interfaces/IAddressRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.11;\\n\\ninterface IAddressRegistry {\\n  function tokenRegistry() external view returns (address);\\n\\n  function marketplace() external view returns (address);\\n\\n  function auction() external view returns (address);\\n}\\n\",\"keccak256\":\"0xc6dc47d2716785905504b39539470292680f58a1a8e4aa683d5b2102ca37392a\",\"license\":\"MIT\"},\"contracts/interfaces/ITokenRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.11;\\n\\ninterface ITokenRegistry {\\n  function enabledCollection(address _nftAddress) external view returns (bool);\\n\\n  function enabledPayToken(address _token) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xfd08d08dfefdd7483e08f8eca9651a24976f3c8a8d88cfdcdf84932a253a014f\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080604052600160cb5534801561001557600080fd5b50612f26806100256000396000f3fe60806040526004361061012d5760003560e01c80635f7063ef116100a5578063859b97fe11610074578063ab2870e211610059578063ab2870e2146103ef578063f2fde38b1461040f578063f3ad65f41461042f57600080fd5b8063859b97fe146103b15780638da5cb5b146103d157600080fd5b80635f7063ef146102f15780636b753f3614610311578063715018a6146103875780638456cb591461039c57600080fd5b80633f4ba83a116100fc57806346904840116100e157806346904840146102765780634cb8ef5b146102ae5780635c975abb146102ce57600080fd5b80633f4ba83a146101ad57806344f91c1e146101c257600080fd5b806304717aca146101395780631794bb3c1461014e57806326232a2e1461016e578063335b115e1461019757600080fd5b3661013457005b600080fd5b61014c610147366004612c76565b61044f565b005b34801561015a57600080fd5b5061014c610169366004612cab565b61065a565b34801561017a57600080fd5b5061018460cd5481565b6040519081526020015b60405180910390f35b3480156101a357600080fd5b5061018460cb5481565b3480156101b957600080fd5b5061014c61085a565b3480156101ce57600080fd5b506102346101dd366004612cec565b60c960209081526000928352604080842090915290825290208054600182015460028301546003840154600485015460058601546006909601546001600160a01b0395861696959094169492939192909160ff1687565b604080516001600160a01b039889168152979096166020880152948601939093526060850191909152608084015260a0830152151560c082015260e00161018e565b34801561028257600080fd5b5060cc54610296906001600160a01b031681565b6040516001600160a01b03909116815260200161018e565b3480156102ba57600080fd5b5061014c6102c9366004612cec565b6108be565b3480156102da57600080fd5b5060975460ff16604051901515815260200161018e565b3480156102fd57600080fd5b5061014c61030c366004612cec565b610aec565b34801561031d57600080fd5b5061036261032c366004612cec565b60ca6020908152600092835260408084209091529082529020805460018201546002909201546001600160a01b03909116919083565b604080516001600160a01b03909416845260208401929092529082015260600161018e565b34801561039357600080fd5b5061014c61117b565b3480156103a857600080fd5b5061014c6111df565b3480156103bd57600080fd5b5061014c6103cc366004612cec565b611241565b3480156103dd57600080fd5b506033546001600160a01b0316610296565b3480156103fb57600080fd5b5061014c61040a366004612d26565b611499565b34801561041b57600080fd5b5061014c61042a366004612d98565b611665565b34801561043b57600080fd5b5060ce54610296906001600160a01b031681565b600260655414156104a75760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b600260655560975460ff16156104f25760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161049e565b3332146105415760405162461bcd60e51b815260206004820152601660248201527f6e6f20636f6e747261637473207065726d697474656400000000000000000000604482015260640161049e565b6001600160a01b03838116600090815260c960209081526040808320868452825291829020825160e08101845281548516815260018201549094169184019190915260028101549183019190915260038101546060830152600481015460808301819052600582015460a084015260069091015460ff16151560c083015242101580156105d2575060a08101514211155b6106445760405162461bcd60e51b815260206004820152602560248201527f62696464696e67206f757473696465206f66207468652061756374696f6e207760448201527f696e646f77000000000000000000000000000000000000000000000000000000606482015260840161049e565b61064f848484611747565b505060016065555050565b600054610100900460ff1680610673575060005460ff16155b6106d65760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161049e565b600054610100900460ff161580156106f8576000805461ffff19166101011790555b61070061197b565b610708611a3d565b610710611ae3565b6001600160a01b0384166107665760405162461bcd60e51b815260206004820152601b60248201527f756e657870656374656420616464726573732072656769737472790000000000604482015260640161049e565b6001600160a01b0383166107bc5760405162461bcd60e51b815260206004820152601860248201527f756e65787065637465642066656520726563697069656e740000000000000000604482015260640161049e565b6103e8821061080d5760405162461bcd60e51b815260206004820152601560248201527f706c6174666f726d206665652065786365656465640000000000000000000000604482015260640161049e565b60ce80546001600160a01b038087166001600160a01b03199283161790925560cc80549286169290911691909117905560cd8290558015610854576000805461ff00191690555b50505050565b6033546001600160a01b031633146108b45760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161049e565b6108bc611b91565b565b600260655414156109115760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161049e565b60026065556001600160a01b03808316600090815260ca6020908152604080832085845290915290208054909116331461098d5760405162461bcd60e51b815260206004820152601e60248201527f796f7520617265206e6f74207468652068696768657374206269646465720000604482015260640161049e565b6001600160a01b038316600090815260c96020908152604080832085845290915290206005015480421180156109ce575061a8c06109cb8242612dcb565b10155b610a405760405162461bcd60e51b815260206004820152603660248201527f63616e207769746864726177206f6e6c7920616674657220313220686f75727360448201527f202861667465722061756374696f6e20656e6465642900000000000000000000606482015260840161049e565b6001808301546001600160a01b038616600090815260ca60209081526040808320888452909152812080546001600160a01b0319168155928301819055600290920191909155610a9285853384611c2d565b336001600160a01b031684866001600160a01b03167f867b8ea96dd803063f905a19f8117cbb1866ec7a594dfede75ab4a5235f61d7c84604051610ad891815260200190565b60405180910390a450506001606555505050565b60026065541415610b3f5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161049e565b600260655560975460ff1615610b8a5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161049e565b6001600160a01b038216600081815260c9602090815260408083208584529091529081902090516331a9108f60e11b81526004810184905290913391636352211e90602401602060405180830381865afa158015610bec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c109190612de2565b6001600160a01b0316148015610c2f575080546001600160a01b031633145b610c7b5760405162461bcd60e51b815260206004820152601960248201527f73656e646572206d757374206265206974656d206f776e657200000000000000604482015260640161049e565b6000816005015411610ccf5760405162461bcd60e51b815260206004820152601160248201527f6e6f2061756374696f6e20657869737473000000000000000000000000000000604482015260640161049e565b60058101544211610d225760405162461bcd60e51b815260206004820152601160248201527f61756374696f6e206e6f7420656e646564000000000000000000000000000000604482015260640161049e565b600681015460ff1615610d775760405162461bcd60e51b815260206004820152601860248201527f61756374696f6e20616c726561647920726573756c7465640000000000000000604482015260640161049e565b6001600160a01b03808416600090815260ca602090815260408083208684529091529020805460018201549192169081610df35760405162461bcd60e51b815260206004820152600c60248201527f6e6f206f70656e20626964730000000000000000000000000000000000000000604482015260640161049e565b8360030154811015610e515760405162461bcd60e51b815260206004820152602160248201527f68696768657374206269642069732062656c6f772072657365727665507269636044820152606560f81b606482015260840161049e565b60405163e985e9c560e01b81523360048201523060248201526001600160a01b0387169063e985e9c590604401602060405180830381865afa158015610e9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ebf9190612dff565b610f0b5760405162461bcd60e51b815260206004820152601460248201527f61756374696f6e206e6f7420617070726f766564000000000000000000000000604482015260640161049e565b60068401805460ff191660019081179091556001600160a01b038716600090815260ca60209081526040808320898452909152812080546001600160a01b0319168155918201819055600290910181905560cd546103e890610f6d9084612e1c565b610f779190612e3b565b600186015460cc549192506001600160a01b0390811691610f9b9183911684611d0b565b8554610fc5906001600160a01b0316610fb48486612dcb565b6001600160a01b0384169190611d0b565b6040516331a9108f60e11b8152600481018890526001600160a01b038916906342842e0e908290636352211e90602401602060405180830381865afa158015611012573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110369190612de2565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681526001600160a01b0391821660048201529087166024820152604481018a9052606401600060405180830381600087803b15801561109e57600080fd5b505af11580156110b2573d6000803e3d6000fd5b505050506001600160a01b03888116600081815260c9602090815260408083208c8452825280832080546001600160a01b03199081168255600180830180549092169091556002820185905560038201859055600482018590556005820194909455600601805460ff19169055918a0154825133815290851691810191909152908101869052918616918991907f711ca8b50b8ecdd19a74ba6202f3169d1cb8d32cc13e96314ac083fe109cc02d9060600160405180910390a450506001606555505050505050565b6033546001600160a01b031633146111d55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161049e565b6108bc6000611da0565b6033546001600160a01b031633146112395760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161049e565b6108bc611df2565b600260655414156112945760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161049e565b600260658190556001600160a01b03838116600081815260c960209081526040808320878452825291829020825160e0810184528154861681526001820154909516918501919091529384015483820152600384015460608401526004808501546080850152600585015460a085015260069094015460ff16151560c0840152516331a9108f60e11b81529283018490529091339190636352211e90602401602060405180830381865afa158015611350573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113749190612de2565b6001600160a01b0316148015611393575080516001600160a01b031633145b6113df5760405162461bcd60e51b815260206004820152601460248201527f73656e646572206d757374206265206f776e6572000000000000000000000000604482015260640161049e565b60008160a00151116114335760405162461bcd60e51b815260206004820152601160248201527f6e6f2061756374696f6e20657869737473000000000000000000000000000000604482015260640161049e565b8060c00151156114855760405162461bcd60e51b815260206004820152601860248201527f61756374696f6e20616c726561647920726573756c7465640000000000000000604482015260640161049e565b61148f8383611e6d565b5050600160655550565b60975460ff16156114df5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161049e565b6040516331a9108f60e11b81526004810187905233906001600160a01b03891690636352211e90602401602060405180830381865afa158015611526573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061154a9190612de2565b6001600160a01b03161480156115c9575060405163e985e9c560e01b81523360048201523060248201526001600160a01b0388169063e985e9c590604401602060405180830381865afa1580156115a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115c99190612dff565b61163b5760405162461bcd60e51b815260206004820152602660248201527f6e6f74206f776e657220616e64206f7220636f6e7472616374206e6f7420617060448201527f70726f7665640000000000000000000000000000000000000000000000000000606482015260840161049e565b61164487611f88565b61164d85612137565b61165c878787878787876122f7565b50505050505050565b6033546001600160a01b031633146116bf5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161049e565b6001600160a01b03811661173b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161049e565b61174481611da0565b50565b60975460ff161561178d5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161049e565b6001600160a01b038316600090815260c960209081526040808320858452909152902060038101546002820154141561183a57806003015482101561183a5760405162461bcd60e51b815260206004820152602660248201527f6269642063616e6e6f74206265206c6f776572207468616e207265736572766560448201527f2070726963650000000000000000000000000000000000000000000000000000606482015260840161049e565b6001600160a01b038416600090815260ca60209081526040808320868452909152812060cb5460018201549192916118729190612e5d565b9050808410156118c45760405162461bcd60e51b815260206004820152601f60248201527f6661696c656420746f206f757462696420686967686573742062696464657200604482015260640161049e565b60018301546118e090339030906001600160a01b0316876125c4565b81546001600160a01b03161561190e578154600183015461190e91889188916001600160a01b031690611c2d565b81546001600160a01b031916331782556001820184905561192c4290565b6002830155604051848152339086906001600160a01b038916907f0158f5674dc243762459b88cfc91b10d2d1ef9d40821cca978c2b680aa4446829060200160405180910390a4505050505050565b600054610100900460ff1680611994575060005460ff16155b6119f75760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161049e565b600054610100900460ff16158015611a19576000805461ffff19166101011790555b611a216126e8565b611a29612799565b8015611744576000805461ff001916905550565b600054610100900460ff1680611a56575060005460ff16155b611ab95760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161049e565b600054610100900460ff16158015611adb576000805461ffff19166101011790555b611a29612840565b600054610100900460ff1680611afc575060005460ff16155b611b5f5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161049e565b600054610100900460ff16158015611b81576000805461ffff19166101011790555b611b896126e8565b611a296128f7565b60975460ff16611be35760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f7420706175736564000000000000000000000000604482015260640161049e565b6097805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b03808516600090815260c960209081526040808320878452825291829020825160e08101845281548516815260018201549094169184018290526002810154928401929092526003820154606084015260048201546080840152600582015460a084015260069091015460ff16151560c0830152611cb69030908590856125c4565b826001600160a01b031684866001600160a01b03167f90e20d1ba82eaa07a212267355536f76bc83bf91c81fd41b74283c4082e7695285604051611cfc91815260200190565b60405180910390a45050505050565b6040516001600160a01b038316602482015260448101829052611d9b90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526129b3565b505050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60975460ff1615611e385760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161049e565b6097805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611c103390565b6001600160a01b03808316600090815260ca602090815260408083208584529091529020805490911615611ef65780546001820154611eb991859185916001600160a01b031690611c2d565b6001600160a01b038316600090815260ca60209081526040808320858452909152812080546001600160a01b031916815560018101829055600201555b6001600160a01b038316600081815260c96020908152604080832086845290915280822080546001600160a01b03199081168255600182018054909116905560028101839055600381018390556004810183905560058101839055600601805460ff19169055518492917f018b64b6242d32aa550e95d78985b938d71af5b3f10827b0683f55da1639304891a3505050565b60ce5460408051639d23c4c760e01b815290516000926001600160a01b031691639d23c4c79160048083019260209291908290030181865afa158015611fd2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ff69190612de2565b6001600160a01b0316141580156120eb575060ce60009054906101000a90046001600160a01b03166001600160a01b0316639d23c4c76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561205b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061207f9190612de2565b60405163b17721a760e01b81526001600160a01b038381166004830152919091169063b17721a790602401602060405180830381865afa1580156120c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120eb9190612dff565b6117445760405162461bcd60e51b815260206004820152601260248201527f696e76616c696420636f6c6c656374696f6e0000000000000000000000000000604482015260640161049e565b6001600160a01b03811615806122ab575060ce5460408051639d23c4c760e01b815290516000926001600160a01b031691639d23c4c79160048083019260209291908290030181865afa158015612192573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121b69190612de2565b6001600160a01b0316141580156122ab575060ce60009054906101000a90046001600160a01b03166001600160a01b0316639d23c4c76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561221b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061223f9190612de2565b6040516314d1e48160e01b81526001600160a01b03838116600483015291909116906314d1e48190602401602060405180830381865afa158015612287573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122ab9190612dff565b6117445760405162461bcd60e51b815260206004820152601160248201527f696e76616c69642070617920746f6b656e000000000000000000000000000000604482015260640161049e565b6001600160a01b038716600090815260c9602090815260408083208984529091529020600501541561236b5760405162461bcd60e51b815260206004820152601760248201527f61756374696f6e20616c72656164792073746172746564000000000000000000604482015260640161049e565b6123778361012c612e5d565b8110156123ec5760405162461bcd60e51b815260206004820152603260248201527f656e642074696d65206d7573742062652067726561746572207468616e20737460448201527f617274202862792035206d696e75746573290000000000000000000000000000606482015260840161049e565b42831161243b5760405162461bcd60e51b815260206004820152601260248201527f696e76616c69642073746172742074696d650000000000000000000000000000604482015260640161049e565b600082156124465750835b6040518060e00160405280336001600160a01b03168152602001876001600160a01b031681526020018281526020018681526020018581526020018381526020016000151581525060c960008a6001600160a01b03166001600160a01b03168152602001908152602001600020600089815260200190815260200160002060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160020155606082015181600301556080820151816004015560a0820151816005015560c08201518160060160006101000a81548160ff02191690831515021790555090505086886001600160a01b03167fca437d90ed6373b827a01275bd2fdfe7e6406d7ecd400662ee0533d3546ab17a886040516125b291906001600160a01b0391909116815260200190565b60405180910390a35050505050505050565b6001600160a01b0382166126d3576001600160a01b038416301461262a5760405162461bcd60e51b815260206004820152601460248201527f696e76616c69642045746865722073656e646572000000000000000000000000604482015260640161049e565b6000836001600160a01b03168260405160006040518083038185875af1925050503d8060008114612677576040519150601f19603f3d011682016040523d82523d6000602084013e61267c565b606091505b50509050806126cd5760405162461bcd60e51b815260206004820152601460248201527f6661696c656420746f2073656e64204574686572000000000000000000000000604482015260640161049e565b50610854565b6108546001600160a01b038316858584612a98565b600054610100900460ff1680612701575060005460ff16155b6127645760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161049e565b600054610100900460ff16158015611a29576000805461ffff19166101011790558015611744576000805461ff001916905550565b600054610100900460ff16806127b2575060005460ff16155b6128155760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161049e565b600054610100900460ff16158015612837576000805461ffff19166101011790555b611a2933611da0565b600054610100900460ff1680612859575060005460ff16155b6128bc5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161049e565b600054610100900460ff161580156128de576000805461ffff19166101011790555b60016065558015611744576000805461ff001916905550565b600054610100900460ff1680612910575060005460ff16155b6129735760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161049e565b600054610100900460ff16158015612995576000805461ffff19166101011790555b6097805460ff191690558015611744576000805461ff001916905550565b6000612a08826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612ad09092919063ffffffff16565b805190915015611d9b5780806020019051810190612a269190612dff565b611d9b5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161049e565b6040516001600160a01b03808516602483015283166044820152606481018290526108549085906323b872dd60e01b90608401611d37565b6060612adf8484600085612ae9565b90505b9392505050565b606082471015612b615760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161049e565b843b612baf5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161049e565b600080866001600160a01b03168587604051612bcb9190612ea1565b60006040518083038185875af1925050503d8060008114612c08576040519150601f19603f3d011682016040523d82523d6000602084013e612c0d565b606091505b5091509150612c1d828286612c28565b979650505050505050565b60608315612c37575081612ae2565b825115612c475782518084602001fd5b8160405162461bcd60e51b815260040161049e9190612ebd565b6001600160a01b038116811461174457600080fd5b600080600060608486031215612c8b57600080fd5b8335612c9681612c61565b95602085013595506040909401359392505050565b600080600060608486031215612cc057600080fd5b8335612ccb81612c61565b92506020840135612cdb81612c61565b929592945050506040919091013590565b60008060408385031215612cff57600080fd5b8235612d0a81612c61565b946020939093013593505050565b801515811461174457600080fd5b600080600080600080600060e0888a031215612d4157600080fd5b8735612d4c81612c61565b9650602088013595506040880135612d6381612c61565b9450606088013593506080880135925060a0880135612d8181612d18565b8092505060c0880135905092959891949750929550565b600060208284031215612daa57600080fd5b8135612ae281612c61565b634e487b7160e01b600052601160045260246000fd5b600082821015612ddd57612ddd612db5565b500390565b600060208284031215612df457600080fd5b8151612ae281612c61565b600060208284031215612e1157600080fd5b8151612ae281612d18565b6000816000190483118215151615612e3657612e36612db5565b500290565b600082612e5857634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115612e7057612e70612db5565b500190565b60005b83811015612e90578181015183820152602001612e78565b838111156108545750506000910152565b60008251612eb3818460208701612e75565b9190910192915050565b6020815260008251806020840152612edc816040850160208701612e75565b601f01601f1916919091016040019291505056fea26469706673582212207bdb6b8f1d8342f4f8a36b7b4215e0febe10dc312220c42c40ef02e9a0df039464736f6c634300080b0033",
  "deployedBytecode": "0x60806040526004361061012d5760003560e01c80635f7063ef116100a5578063859b97fe11610074578063ab2870e211610059578063ab2870e2146103ef578063f2fde38b1461040f578063f3ad65f41461042f57600080fd5b8063859b97fe146103b15780638da5cb5b146103d157600080fd5b80635f7063ef146102f15780636b753f3614610311578063715018a6146103875780638456cb591461039c57600080fd5b80633f4ba83a116100fc57806346904840116100e157806346904840146102765780634cb8ef5b146102ae5780635c975abb146102ce57600080fd5b80633f4ba83a146101ad57806344f91c1e146101c257600080fd5b806304717aca146101395780631794bb3c1461014e57806326232a2e1461016e578063335b115e1461019757600080fd5b3661013457005b600080fd5b61014c610147366004612c76565b61044f565b005b34801561015a57600080fd5b5061014c610169366004612cab565b61065a565b34801561017a57600080fd5b5061018460cd5481565b6040519081526020015b60405180910390f35b3480156101a357600080fd5b5061018460cb5481565b3480156101b957600080fd5b5061014c61085a565b3480156101ce57600080fd5b506102346101dd366004612cec565b60c960209081526000928352604080842090915290825290208054600182015460028301546003840154600485015460058601546006909601546001600160a01b0395861696959094169492939192909160ff1687565b604080516001600160a01b039889168152979096166020880152948601939093526060850191909152608084015260a0830152151560c082015260e00161018e565b34801561028257600080fd5b5060cc54610296906001600160a01b031681565b6040516001600160a01b03909116815260200161018e565b3480156102ba57600080fd5b5061014c6102c9366004612cec565b6108be565b3480156102da57600080fd5b5060975460ff16604051901515815260200161018e565b3480156102fd57600080fd5b5061014c61030c366004612cec565b610aec565b34801561031d57600080fd5b5061036261032c366004612cec565b60ca6020908152600092835260408084209091529082529020805460018201546002909201546001600160a01b03909116919083565b604080516001600160a01b03909416845260208401929092529082015260600161018e565b34801561039357600080fd5b5061014c61117b565b3480156103a857600080fd5b5061014c6111df565b3480156103bd57600080fd5b5061014c6103cc366004612cec565b611241565b3480156103dd57600080fd5b506033546001600160a01b0316610296565b3480156103fb57600080fd5b5061014c61040a366004612d26565b611499565b34801561041b57600080fd5b5061014c61042a366004612d98565b611665565b34801561043b57600080fd5b5060ce54610296906001600160a01b031681565b600260655414156104a75760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b600260655560975460ff16156104f25760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161049e565b3332146105415760405162461bcd60e51b815260206004820152601660248201527f6e6f20636f6e747261637473207065726d697474656400000000000000000000604482015260640161049e565b6001600160a01b03838116600090815260c960209081526040808320868452825291829020825160e08101845281548516815260018201549094169184019190915260028101549183019190915260038101546060830152600481015460808301819052600582015460a084015260069091015460ff16151560c083015242101580156105d2575060a08101514211155b6106445760405162461bcd60e51b815260206004820152602560248201527f62696464696e67206f757473696465206f66207468652061756374696f6e207760448201527f696e646f77000000000000000000000000000000000000000000000000000000606482015260840161049e565b61064f848484611747565b505060016065555050565b600054610100900460ff1680610673575060005460ff16155b6106d65760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161049e565b600054610100900460ff161580156106f8576000805461ffff19166101011790555b61070061197b565b610708611a3d565b610710611ae3565b6001600160a01b0384166107665760405162461bcd60e51b815260206004820152601b60248201527f756e657870656374656420616464726573732072656769737472790000000000604482015260640161049e565b6001600160a01b0383166107bc5760405162461bcd60e51b815260206004820152601860248201527f756e65787065637465642066656520726563697069656e740000000000000000604482015260640161049e565b6103e8821061080d5760405162461bcd60e51b815260206004820152601560248201527f706c6174666f726d206665652065786365656465640000000000000000000000604482015260640161049e565b60ce80546001600160a01b038087166001600160a01b03199283161790925560cc80549286169290911691909117905560cd8290558015610854576000805461ff00191690555b50505050565b6033546001600160a01b031633146108b45760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161049e565b6108bc611b91565b565b600260655414156109115760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161049e565b60026065556001600160a01b03808316600090815260ca6020908152604080832085845290915290208054909116331461098d5760405162461bcd60e51b815260206004820152601e60248201527f796f7520617265206e6f74207468652068696768657374206269646465720000604482015260640161049e565b6001600160a01b038316600090815260c96020908152604080832085845290915290206005015480421180156109ce575061a8c06109cb8242612dcb565b10155b610a405760405162461bcd60e51b815260206004820152603660248201527f63616e207769746864726177206f6e6c7920616674657220313220686f75727360448201527f202861667465722061756374696f6e20656e6465642900000000000000000000606482015260840161049e565b6001808301546001600160a01b038616600090815260ca60209081526040808320888452909152812080546001600160a01b0319168155928301819055600290920191909155610a9285853384611c2d565b336001600160a01b031684866001600160a01b03167f867b8ea96dd803063f905a19f8117cbb1866ec7a594dfede75ab4a5235f61d7c84604051610ad891815260200190565b60405180910390a450506001606555505050565b60026065541415610b3f5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161049e565b600260655560975460ff1615610b8a5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161049e565b6001600160a01b038216600081815260c9602090815260408083208584529091529081902090516331a9108f60e11b81526004810184905290913391636352211e90602401602060405180830381865afa158015610bec573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c109190612de2565b6001600160a01b0316148015610c2f575080546001600160a01b031633145b610c7b5760405162461bcd60e51b815260206004820152601960248201527f73656e646572206d757374206265206974656d206f776e657200000000000000604482015260640161049e565b6000816005015411610ccf5760405162461bcd60e51b815260206004820152601160248201527f6e6f2061756374696f6e20657869737473000000000000000000000000000000604482015260640161049e565b60058101544211610d225760405162461bcd60e51b815260206004820152601160248201527f61756374696f6e206e6f7420656e646564000000000000000000000000000000604482015260640161049e565b600681015460ff1615610d775760405162461bcd60e51b815260206004820152601860248201527f61756374696f6e20616c726561647920726573756c7465640000000000000000604482015260640161049e565b6001600160a01b03808416600090815260ca602090815260408083208684529091529020805460018201549192169081610df35760405162461bcd60e51b815260206004820152600c60248201527f6e6f206f70656e20626964730000000000000000000000000000000000000000604482015260640161049e565b8360030154811015610e515760405162461bcd60e51b815260206004820152602160248201527f68696768657374206269642069732062656c6f772072657365727665507269636044820152606560f81b606482015260840161049e565b60405163e985e9c560e01b81523360048201523060248201526001600160a01b0387169063e985e9c590604401602060405180830381865afa158015610e9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ebf9190612dff565b610f0b5760405162461bcd60e51b815260206004820152601460248201527f61756374696f6e206e6f7420617070726f766564000000000000000000000000604482015260640161049e565b60068401805460ff191660019081179091556001600160a01b038716600090815260ca60209081526040808320898452909152812080546001600160a01b0319168155918201819055600290910181905560cd546103e890610f6d9084612e1c565b610f779190612e3b565b600186015460cc549192506001600160a01b0390811691610f9b9183911684611d0b565b8554610fc5906001600160a01b0316610fb48486612dcb565b6001600160a01b0384169190611d0b565b6040516331a9108f60e11b8152600481018890526001600160a01b038916906342842e0e908290636352211e90602401602060405180830381865afa158015611012573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110369190612de2565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681526001600160a01b0391821660048201529087166024820152604481018a9052606401600060405180830381600087803b15801561109e57600080fd5b505af11580156110b2573d6000803e3d6000fd5b505050506001600160a01b03888116600081815260c9602090815260408083208c8452825280832080546001600160a01b03199081168255600180830180549092169091556002820185905560038201859055600482018590556005820194909455600601805460ff19169055918a0154825133815290851691810191909152908101869052918616918991907f711ca8b50b8ecdd19a74ba6202f3169d1cb8d32cc13e96314ac083fe109cc02d9060600160405180910390a450506001606555505050505050565b6033546001600160a01b031633146111d55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161049e565b6108bc6000611da0565b6033546001600160a01b031633146112395760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161049e565b6108bc611df2565b600260655414156112945760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161049e565b600260658190556001600160a01b03838116600081815260c960209081526040808320878452825291829020825160e0810184528154861681526001820154909516918501919091529384015483820152600384015460608401526004808501546080850152600585015460a085015260069094015460ff16151560c0840152516331a9108f60e11b81529283018490529091339190636352211e90602401602060405180830381865afa158015611350573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113749190612de2565b6001600160a01b0316148015611393575080516001600160a01b031633145b6113df5760405162461bcd60e51b815260206004820152601460248201527f73656e646572206d757374206265206f776e6572000000000000000000000000604482015260640161049e565b60008160a00151116114335760405162461bcd60e51b815260206004820152601160248201527f6e6f2061756374696f6e20657869737473000000000000000000000000000000604482015260640161049e565b8060c00151156114855760405162461bcd60e51b815260206004820152601860248201527f61756374696f6e20616c726561647920726573756c7465640000000000000000604482015260640161049e565b61148f8383611e6d565b5050600160655550565b60975460ff16156114df5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161049e565b6040516331a9108f60e11b81526004810187905233906001600160a01b03891690636352211e90602401602060405180830381865afa158015611526573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061154a9190612de2565b6001600160a01b03161480156115c9575060405163e985e9c560e01b81523360048201523060248201526001600160a01b0388169063e985e9c590604401602060405180830381865afa1580156115a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115c99190612dff565b61163b5760405162461bcd60e51b815260206004820152602660248201527f6e6f74206f776e657220616e64206f7220636f6e7472616374206e6f7420617060448201527f70726f7665640000000000000000000000000000000000000000000000000000606482015260840161049e565b61164487611f88565b61164d85612137565b61165c878787878787876122f7565b50505050505050565b6033546001600160a01b031633146116bf5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161049e565b6001600160a01b03811661173b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161049e565b61174481611da0565b50565b60975460ff161561178d5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161049e565b6001600160a01b038316600090815260c960209081526040808320858452909152902060038101546002820154141561183a57806003015482101561183a5760405162461bcd60e51b815260206004820152602660248201527f6269642063616e6e6f74206265206c6f776572207468616e207265736572766560448201527f2070726963650000000000000000000000000000000000000000000000000000606482015260840161049e565b6001600160a01b038416600090815260ca60209081526040808320868452909152812060cb5460018201549192916118729190612e5d565b9050808410156118c45760405162461bcd60e51b815260206004820152601f60248201527f6661696c656420746f206f757462696420686967686573742062696464657200604482015260640161049e565b60018301546118e090339030906001600160a01b0316876125c4565b81546001600160a01b03161561190e578154600183015461190e91889188916001600160a01b031690611c2d565b81546001600160a01b031916331782556001820184905561192c4290565b6002830155604051848152339086906001600160a01b038916907f0158f5674dc243762459b88cfc91b10d2d1ef9d40821cca978c2b680aa4446829060200160405180910390a4505050505050565b600054610100900460ff1680611994575060005460ff16155b6119f75760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161049e565b600054610100900460ff16158015611a19576000805461ffff19166101011790555b611a216126e8565b611a29612799565b8015611744576000805461ff001916905550565b600054610100900460ff1680611a56575060005460ff16155b611ab95760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161049e565b600054610100900460ff16158015611adb576000805461ffff19166101011790555b611a29612840565b600054610100900460ff1680611afc575060005460ff16155b611b5f5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161049e565b600054610100900460ff16158015611b81576000805461ffff19166101011790555b611b896126e8565b611a296128f7565b60975460ff16611be35760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f7420706175736564000000000000000000000000604482015260640161049e565b6097805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b03808516600090815260c960209081526040808320878452825291829020825160e08101845281548516815260018201549094169184018290526002810154928401929092526003820154606084015260048201546080840152600582015460a084015260069091015460ff16151560c0830152611cb69030908590856125c4565b826001600160a01b031684866001600160a01b03167f90e20d1ba82eaa07a212267355536f76bc83bf91c81fd41b74283c4082e7695285604051611cfc91815260200190565b60405180910390a45050505050565b6040516001600160a01b038316602482015260448101829052611d9b90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526129b3565b505050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60975460ff1615611e385760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161049e565b6097805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611c103390565b6001600160a01b03808316600090815260ca602090815260408083208584529091529020805490911615611ef65780546001820154611eb991859185916001600160a01b031690611c2d565b6001600160a01b038316600090815260ca60209081526040808320858452909152812080546001600160a01b031916815560018101829055600201555b6001600160a01b038316600081815260c96020908152604080832086845290915280822080546001600160a01b03199081168255600182018054909116905560028101839055600381018390556004810183905560058101839055600601805460ff19169055518492917f018b64b6242d32aa550e95d78985b938d71af5b3f10827b0683f55da1639304891a3505050565b60ce5460408051639d23c4c760e01b815290516000926001600160a01b031691639d23c4c79160048083019260209291908290030181865afa158015611fd2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ff69190612de2565b6001600160a01b0316141580156120eb575060ce60009054906101000a90046001600160a01b03166001600160a01b0316639d23c4c76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561205b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061207f9190612de2565b60405163b17721a760e01b81526001600160a01b038381166004830152919091169063b17721a790602401602060405180830381865afa1580156120c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120eb9190612dff565b6117445760405162461bcd60e51b815260206004820152601260248201527f696e76616c696420636f6c6c656374696f6e0000000000000000000000000000604482015260640161049e565b6001600160a01b03811615806122ab575060ce5460408051639d23c4c760e01b815290516000926001600160a01b031691639d23c4c79160048083019260209291908290030181865afa158015612192573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121b69190612de2565b6001600160a01b0316141580156122ab575060ce60009054906101000a90046001600160a01b03166001600160a01b0316639d23c4c76040518163ffffffff1660e01b8152600401602060405180830381865afa15801561221b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061223f9190612de2565b6040516314d1e48160e01b81526001600160a01b03838116600483015291909116906314d1e48190602401602060405180830381865afa158015612287573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122ab9190612dff565b6117445760405162461bcd60e51b815260206004820152601160248201527f696e76616c69642070617920746f6b656e000000000000000000000000000000604482015260640161049e565b6001600160a01b038716600090815260c9602090815260408083208984529091529020600501541561236b5760405162461bcd60e51b815260206004820152601760248201527f61756374696f6e20616c72656164792073746172746564000000000000000000604482015260640161049e565b6123778361012c612e5d565b8110156123ec5760405162461bcd60e51b815260206004820152603260248201527f656e642074696d65206d7573742062652067726561746572207468616e20737460448201527f617274202862792035206d696e75746573290000000000000000000000000000606482015260840161049e565b42831161243b5760405162461bcd60e51b815260206004820152601260248201527f696e76616c69642073746172742074696d650000000000000000000000000000604482015260640161049e565b600082156124465750835b6040518060e00160405280336001600160a01b03168152602001876001600160a01b031681526020018281526020018681526020018581526020018381526020016000151581525060c960008a6001600160a01b03166001600160a01b03168152602001908152602001600020600089815260200190815260200160002060008201518160000160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160020155606082015181600301556080820151816004015560a0820151816005015560c08201518160060160006101000a81548160ff02191690831515021790555090505086886001600160a01b03167fca437d90ed6373b827a01275bd2fdfe7e6406d7ecd400662ee0533d3546ab17a886040516125b291906001600160a01b0391909116815260200190565b60405180910390a35050505050505050565b6001600160a01b0382166126d3576001600160a01b038416301461262a5760405162461bcd60e51b815260206004820152601460248201527f696e76616c69642045746865722073656e646572000000000000000000000000604482015260640161049e565b6000836001600160a01b03168260405160006040518083038185875af1925050503d8060008114612677576040519150601f19603f3d011682016040523d82523d6000602084013e61267c565b606091505b50509050806126cd5760405162461bcd60e51b815260206004820152601460248201527f6661696c656420746f2073656e64204574686572000000000000000000000000604482015260640161049e565b50610854565b6108546001600160a01b038316858584612a98565b600054610100900460ff1680612701575060005460ff16155b6127645760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161049e565b600054610100900460ff16158015611a29576000805461ffff19166101011790558015611744576000805461ff001916905550565b600054610100900460ff16806127b2575060005460ff16155b6128155760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161049e565b600054610100900460ff16158015612837576000805461ffff19166101011790555b611a2933611da0565b600054610100900460ff1680612859575060005460ff16155b6128bc5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161049e565b600054610100900460ff161580156128de576000805461ffff19166101011790555b60016065558015611744576000805461ff001916905550565b600054610100900460ff1680612910575060005460ff16155b6129735760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161049e565b600054610100900460ff16158015612995576000805461ffff19166101011790555b6097805460ff191690558015611744576000805461ff001916905550565b6000612a08826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316612ad09092919063ffffffff16565b805190915015611d9b5780806020019051810190612a269190612dff565b611d9b5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161049e565b6040516001600160a01b03808516602483015283166044820152606481018290526108549085906323b872dd60e01b90608401611d37565b6060612adf8484600085612ae9565b90505b9392505050565b606082471015612b615760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161049e565b843b612baf5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161049e565b600080866001600160a01b03168587604051612bcb9190612ea1565b60006040518083038185875af1925050503d8060008114612c08576040519150601f19603f3d011682016040523d82523d6000602084013e612c0d565b606091505b5091509150612c1d828286612c28565b979650505050505050565b60608315612c37575081612ae2565b825115612c475782518084602001fd5b8160405162461bcd60e51b815260040161049e9190612ebd565b6001600160a01b038116811461174457600080fd5b600080600060608486031215612c8b57600080fd5b8335612c9681612c61565b95602085013595506040909401359392505050565b600080600060608486031215612cc057600080fd5b8335612ccb81612c61565b92506020840135612cdb81612c61565b929592945050506040919091013590565b60008060408385031215612cff57600080fd5b8235612d0a81612c61565b946020939093013593505050565b801515811461174457600080fd5b600080600080600080600060e0888a031215612d4157600080fd5b8735612d4c81612c61565b9650602088013595506040880135612d6381612c61565b9450606088013593506080880135925060a0880135612d8181612d18565b8092505060c0880135905092959891949750929550565b600060208284031215612daa57600080fd5b8135612ae281612c61565b634e487b7160e01b600052601160045260246000fd5b600082821015612ddd57612ddd612db5565b500390565b600060208284031215612df457600080fd5b8151612ae281612c61565b600060208284031215612e1157600080fd5b8151612ae281612d18565b6000816000190483118215151615612e3657612e36612db5565b500290565b600082612e5857634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115612e7057612e70612db5565b500190565b60005b83811015612e90578181015183820152602001612e78565b838111156108545750506000910152565b60008251612eb3818460208701612e75565b9190910192915050565b6020815260008251806020840152612edc816040850160208701612e75565b601f01601f1916919091016040019291505056fea26469706673582212207bdb6b8f1d8342f4f8a36b7b4215e0febe10dc312220c42c40ef02e9a0df039464736f6c634300080b0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "cancelAuction(address,uint256)": {
        "details": "Only item owner",
        "params": {
          "_nftAddress": "ERC 721 Address",
          "_tokenId": "Token ID of the NFT being auctioned"
        }
      },
      "createAuction(address,uint256,address,uint256,uint256,bool,uint256)": {
        "details": "Only the owner of item can create an auction and must have approved the contractIn addition to owning the item, the sender also has to have the MINTER role.End time for the auction must be in the future.",
        "params": {
          "_endTimestamp": "Unix epoch in seconds for the auction end time.",
          "_minBidReserve": "Whether the reserve price should be applied or not",
          "_nftAddress": "ERC 721 Address",
          "_payToken": "Paying token",
          "_reservePrice": "Item cannot be sold for less than this or minBidIncrement, whichever is higher",
          "_startTimestamp": "Unix epoch in seconds for the auction start time",
          "_tokenId": "Token ID of the item being auctioned"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "pause()": {
        "details": "Only owner"
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "placeBid(address,uint256,uint256)": {
        "details": "Only callable when the auction is openBids from smart contracts are prohibited to prevent griefing with always reverting receiver",
        "params": {
          "_bidAmount": "Bid amount",
          "_nftAddress": "ERC 721 Address",
          "_tokenId": "Token ID of the item being auctioned"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "resultAuction(address,uint256)": {
        "details": "Only admin or smart contractAuction can only be resulted if there has been a bidder and reserve met.If there have been no bids, the auction needs to be cancelled instead using `cancelAuction()`",
        "params": {
          "_nftAddress": "ERC 721 Address",
          "_tokenId": "Token ID of the item being auctioned"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "unpause()": {
        "details": "Only owner"
      },
      "withdrawBid(address,uint256)": {
        "details": "Only callable by the existing top bidder",
        "params": {
          "_nftAddress": "ERC 721 Address",
          "_tokenId": "Token ID of the item being auctioned"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addressRegistry()": {
        "notice": "AddressRegistry"
      },
      "auctions(address,uint256)": {
        "notice": "ERC721 Address -> Token ID -> Auction Parameters"
      },
      "cancelAuction(address,uint256)": {
        "notice": "Cancels and inflight and un-resulted auctions, returning the funds to the top bidder if found"
      },
      "createAuction(address,uint256,address,uint256,uint256,bool,uint256)": {
        "notice": "Creates a new auction for a given item"
      },
      "feeRecipient()": {
        "notice": "Platform fee recipient"
      },
      "highestBids(address,uint256)": {
        "notice": "ERC721 Address -> Token ID -> highest bidder info (if a bid has been received)"
      },
      "minBidIncrement()": {
        "notice": "globally and across all auctions, the amount by which a bid has to increase"
      },
      "pause()": {
        "notice": "Pause Auction"
      },
      "placeBid(address,uint256,uint256)": {
        "notice": "Places a new bid, out bidding the existing bidder if found and criteria is reached"
      },
      "platformFee()": {
        "notice": "Platform fee"
      },
      "resultAuction(address,uint256)": {
        "notice": "Closes a finished auction and rewards the highest bidder"
      },
      "unpause()": {
        "notice": "Resume Auction"
      },
      "withdrawBid(address,uint256)": {
        "notice": "Allows the hightest bidder to withdraw the bid (after 12 hours post auction's end)"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 130,
        "contract": "contracts/OPGamesAuction.sol:OPGamesAuction",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 133,
        "contract": "contracts/OPGamesAuction.sol:OPGamesAuction",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 1167,
        "contract": "contracts/OPGamesAuction.sol:OPGamesAuction",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 10,
        "contract": "contracts/OPGamesAuction.sol:OPGamesAuction",
        "label": "_owner",
        "offset": 0,
        "slot": "51",
        "type": "t_address"
      },
      {
        "astId": 123,
        "contract": "contracts/OPGamesAuction.sol:OPGamesAuction",
        "label": "__gap",
        "offset": 0,
        "slot": "52",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 297,
        "contract": "contracts/OPGamesAuction.sol:OPGamesAuction",
        "label": "_status",
        "offset": 0,
        "slot": "101",
        "type": "t_uint256"
      },
      {
        "astId": 340,
        "contract": "contracts/OPGamesAuction.sol:OPGamesAuction",
        "label": "__gap",
        "offset": 0,
        "slot": "102",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 191,
        "contract": "contracts/OPGamesAuction.sol:OPGamesAuction",
        "label": "_paused",
        "offset": 0,
        "slot": "151",
        "type": "t_bool"
      },
      {
        "astId": 282,
        "contract": "contracts/OPGamesAuction.sol:OPGamesAuction",
        "label": "__gap",
        "offset": 0,
        "slot": "152",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 1402,
        "contract": "contracts/OPGamesAuction.sol:OPGamesAuction",
        "label": "auctions",
        "offset": 0,
        "slot": "201",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Auction)1387_storage))"
      },
      {
        "astId": 1410,
        "contract": "contracts/OPGamesAuction.sol:OPGamesAuction",
        "label": "highestBids",
        "offset": 0,
        "slot": "202",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(HighestBid)1394_storage))"
      },
      {
        "astId": 1414,
        "contract": "contracts/OPGamesAuction.sol:OPGamesAuction",
        "label": "minBidIncrement",
        "offset": 0,
        "slot": "203",
        "type": "t_uint256"
      },
      {
        "astId": 1417,
        "contract": "contracts/OPGamesAuction.sol:OPGamesAuction",
        "label": "feeRecipient",
        "offset": 0,
        "slot": "204",
        "type": "t_address_payable"
      },
      {
        "astId": 1420,
        "contract": "contracts/OPGamesAuction.sol:OPGamesAuction",
        "label": "platformFee",
        "offset": 0,
        "slot": "205",
        "type": "t_uint256"
      },
      {
        "astId": 1424,
        "contract": "contracts/OPGamesAuction.sol:OPGamesAuction",
        "label": "addressRegistry",
        "offset": 0,
        "slot": "206",
        "type": "t_contract(IAddressRegistry)4072"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)49_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568"
      },
      "t_array(t_uint256)50_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IAddressRegistry)4072": {
        "encoding": "inplace",
        "label": "contract IAddressRegistry",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_struct(Auction)1387_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => struct OPGamesAuction.Auction))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_struct(Auction)1387_storage)"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_struct(HighestBid)1394_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => struct OPGamesAuction.HighestBid))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_struct(HighestBid)1394_storage)"
      },
      "t_mapping(t_uint256,t_struct(Auction)1387_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct OPGamesAuction.Auction)",
        "numberOfBytes": "32",
        "value": "t_struct(Auction)1387_storage"
      },
      "t_mapping(t_uint256,t_struct(HighestBid)1394_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct OPGamesAuction.HighestBid)",
        "numberOfBytes": "32",
        "value": "t_struct(HighestBid)1394_storage"
      },
      "t_struct(Auction)1387_storage": {
        "encoding": "inplace",
        "label": "struct OPGamesAuction.Auction",
        "members": [
          {
            "astId": 1374,
            "contract": "contracts/OPGamesAuction.sol:OPGamesAuction",
            "label": "owner",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 1376,
            "contract": "contracts/OPGamesAuction.sol:OPGamesAuction",
            "label": "payToken",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 1378,
            "contract": "contracts/OPGamesAuction.sol:OPGamesAuction",
            "label": "minBid",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 1380,
            "contract": "contracts/OPGamesAuction.sol:OPGamesAuction",
            "label": "reservePrice",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 1382,
            "contract": "contracts/OPGamesAuction.sol:OPGamesAuction",
            "label": "startTime",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 1384,
            "contract": "contracts/OPGamesAuction.sol:OPGamesAuction",
            "label": "endTime",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 1386,
            "contract": "contracts/OPGamesAuction.sol:OPGamesAuction",
            "label": "resulted",
            "offset": 0,
            "slot": "6",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_struct(HighestBid)1394_storage": {
        "encoding": "inplace",
        "label": "struct OPGamesAuction.HighestBid",
        "members": [
          {
            "astId": 1389,
            "contract": "contracts/OPGamesAuction.sol:OPGamesAuction",
            "label": "bidder",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 1391,
            "contract": "contracts/OPGamesAuction.sol:OPGamesAuction",
            "label": "bid",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 1393,
            "contract": "contracts/OPGamesAuction.sol:OPGamesAuction",
            "label": "lastBidTime",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}